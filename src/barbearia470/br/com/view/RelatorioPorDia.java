package barbearia470.br.com.view;

import barbearia470.br.com.DAO.RelatorioDAO;
import barbearia470.br.com.conexao.Conexao;
import barbearia470.br.com.model.Relatorio;
import barbearia470.br.com.tabelasModel.ModeloTabela;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.joda.money.CurrencyUnit;
import org.joda.money.Money;

public class RelatorioPorDia extends javax.swing.JFrame {

    /**
     * Creates new form Relatorio
     */
    public RelatorioPorDia() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);

        Calendar c = Calendar.getInstance();
        Date dia = c.getTime();

        jDateChooser_dia.setDate(dia);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser_dia = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_relatorio = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jButton_buscar = new javax.swing.JButton();
        jPanel_graficoQuantidade = new javax.swing.JPanel();
        jPanel_graficoValores = new javax.swing.JPanel();
        jPanel_graficoValoresTotais = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_relatorioPorFuncionario = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar_menuBar = new javax.swing.JMenuBar();
        jMenu_cadastro = new javax.swing.JMenu();
        jMenuItem_clientes = new javax.swing.JMenuItem();
        jMenuItem_funcionarios = new javax.swing.JMenuItem();
        jMenuItem_servicos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_vendaDoDia = new javax.swing.JMenuItem();
        jMenu_relatorio = new javax.swing.JMenu();
        jMenuItem_porPeriodo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_confEmail = new javax.swing.JMenuItem();
        jMenu_sair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Relatorio por Dia");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setText("Data Inicial");

        jTable_relatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_relatorio.setRowHeight(21);
        jTable_relatorio.setShowGrid(true);
        jTable_relatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_relatorioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_relatorio);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton_buscar.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jButton_buscar.setText("Buscar");
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });

        jPanel_graficoQuantidade.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_graficoQuantidade.setLayout(new java.awt.BorderLayout());

        jPanel_graficoValores.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_graficoValores.setLayout(new java.awt.BorderLayout());

        jPanel_graficoValoresTotais.setBackground(new java.awt.Color(204, 204, 204));
        jPanel_graficoValoresTotais.setLayout(new java.awt.BorderLayout());

        jTable_relatorioPorFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_relatorioPorFuncionario.setRowHeight(21);
        jTable_relatorioPorFuncionario.setShowGrid(true);
        jTable_relatorioPorFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_relatorioPorFuncionarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_relatorioPorFuncionario);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Atendimentos do dia");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Balanço do dia por funcionário");

        jMenu_cadastro.setText("Cadastro");

        jMenuItem_clientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber.png"))); // NOI18N
        jMenuItem_clientes.setText("Clientes");
        jMenuItem_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clientesActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_clientes);

        jMenuItem_funcionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber_funcionario.png"))); // NOI18N
        jMenuItem_funcionarios.setText("Funcionários");
        jMenuItem_funcionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_funcionariosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_funcionarios);

        jMenuItem_servicos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barberiro.png"))); // NOI18N
        jMenuItem_servicos.setText("Serviços/Produtos");
        jMenuItem_servicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_servicosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_servicos);

        jMenuBar_menuBar.add(jMenu_cadastro);

        jMenu2.setText("Vendas");

        jMenuItem_vendaDoDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/list.png"))); // NOI18N
        jMenuItem_vendaDoDia.setText("Vendas do Dia");
        jMenuItem_vendaDoDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_vendaDoDiaActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_vendaDoDia);

        jMenuBar_menuBar.add(jMenu2);

        jMenu_relatorio.setText("Relatorio");

        jMenuItem_porPeriodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/computer-monitor-with-bar-graph.png"))); // NOI18N
        jMenuItem_porPeriodo.setText("Por periodo");
        jMenuItem_porPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_porPeriodoActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_porPeriodo);

        jMenuBar_menuBar.add(jMenu_relatorio);

        jMenu1.setText("Configuração");

        jMenuItem_confEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/message.png"))); // NOI18N
        jMenuItem_confEmail.setText("E-mail");
        jMenuItem_confEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_confEmailActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_confEmail);

        jMenuBar_menuBar.add(jMenu1);

        jMenu_sair.setText("Sair");
        jMenuBar_menuBar.add(jMenu_sair);

        setJMenuBar(jMenuBar_menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(138, 138, 138)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jDateChooser_dia, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_buscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                                    .addComponent(jPanel_graficoValoresTotais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel_graficoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel_graficoValores, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addComponent(jDateChooser_dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel_graficoValoresTotais, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel_graficoQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel_graficoValores, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_relatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_relatorioMouseClicked

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        conexao.desconectar();
    }//GEN-LAST:event_jTable_relatorioMouseClicked

    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed

        limpaTabela();
        SimpleDateFormat dia = new SimpleDateFormat("yyyy-MM-dd");

        if (jDateChooser_dia.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Por favor, informa a data para a pesquisa");
            return;
        }

        String dataInicial = dia.format(jDateChooser_dia.getDate());

        RelatorioDAO relatorioDAO = new RelatorioDAO();
        Relatorio relatorio = relatorioDAO.totalVendaNoDia(dataInicial);

        if (relatorio != null) {
            criaGraficoQuantidade(relatorio);
            criaGraficoValores(relatorio);
            criaGraficoValoresTotais(relatorio);
            preencheTabela(relatorio);
            preenchetabelaValoresFuncionarios(relatorio);
        } else {
            JOptionPane.showMessageDialog(null, "Não há registros para esta data");
            preencheTabela(relatorio);
            preenchetabelaValoresFuncionarios(relatorio);
            criaGraficoQuantidade(relatorio);
            criaGraficoValores(relatorio);
            criaGraficoValoresTotais(relatorio);
        }


    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void jTable_relatorioPorFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_relatorioPorFuncionarioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_relatorioPorFuncionarioMouseClicked

    private void jMenuItem_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clientesActionPerformed

        CadastroCliente cadastroCliente = new CadastroCliente();
        cadastroCliente.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_clientesActionPerformed

    private void jMenuItem_funcionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_funcionariosActionPerformed

        CadastroFuncionario cadastroFuncionario = new CadastroFuncionario();
        cadastroFuncionario.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_funcionariosActionPerformed

    private void jMenuItem_servicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_servicosActionPerformed

        CadastroServicoProdutos cadastroServico = new CadastroServicoProdutos();
        cadastroServico.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_servicosActionPerformed

    private void jMenuItem_vendaDoDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_vendaDoDiaActionPerformed

        MenuPrincipal menuPrincipal = new MenuPrincipal();
        menuPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_vendaDoDiaActionPerformed

    private void jMenuItem_porPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_porPeriodoActionPerformed

        RelatorioGeral relatorioGeral = new RelatorioGeral();
        relatorioGeral.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_porPeriodoActionPerformed

    private void jMenuItem_confEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_confEmailActionPerformed

        ConfEmail configuracaoEmail = new ConfEmail();
        configuracaoEmail.setVisible(true);
    }//GEN-LAST:event_jMenuItem_confEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioPorDia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatorioPorDia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_buscar;
    private com.toedter.calendar.JDateChooser jDateChooser_dia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar_menuBar;
    private javax.swing.JMenuItem jMenuItem_clientes;
    private javax.swing.JMenuItem jMenuItem_confEmail;
    private javax.swing.JMenuItem jMenuItem_funcionarios;
    private javax.swing.JMenuItem jMenuItem_porPeriodo;
    private javax.swing.JMenuItem jMenuItem_servicos;
    private javax.swing.JMenuItem jMenuItem_vendaDoDia;
    private javax.swing.JMenu jMenu_cadastro;
    private javax.swing.JMenu jMenu_relatorio;
    private javax.swing.JMenu jMenu_sair;
    private javax.swing.JPanel jPanel_graficoQuantidade;
    private javax.swing.JPanel jPanel_graficoValores;
    private javax.swing.JPanel jPanel_graficoValoresTotais;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_relatorio;
    private javax.swing.JTable jTable_relatorioPorFuncionario;
    // End of variables declaration//GEN-END:variables

    private void criaGraficoQuantidade(Relatorio relatorio) {

        DefaultCategoryDataset ds = new DefaultCategoryDataset();

        int atendimentos = 0;
        
        if (relatorio != null) {
            atendimentos = relatorio.getAtendimentos();
            ds.addValue(relatorio.getProdutos(), "Total", "Produtos");
            ds.addValue(relatorio.getBebidas(), "Total", "Bebidas");
            ds.addValue(relatorio.getOutros(), "Total", "Outros");
            ds.addValue(relatorio.getCartao(), "Total", "Cartão");
            ds.addValue(relatorio.getDinheiro(), "Total", "Dinheiro");
            ds.addValue(relatorio.getCabelo(), "Total", "Cabelo");
            ds.addValue(relatorio.getBarba(), "Total", "Barba");
            ds.addValue(relatorio.getBarbaCabelo(), "Total", "Cabelo e Barba");
            ds.addValue(relatorio.getDegrade(), "Total", "Degrade");
            ds.addValue(relatorio.getMaquina(), "Total", "Maquina");
            
        } else {
            atendimentos = relatorio.getAtendimentos();
            ds.addValue(0, "Total", "Produtos");
            ds.addValue(0, "Total", "Bebidas");
            ds.addValue(0, "Total", "Outros");
            ds.addValue(0, "Total", "Cartão");
            ds.addValue(0, "Total", "Dinheiro");
            ds.addValue(0, "Total", "Cabelo");
            ds.addValue(0, "Total", "Barba");
            ds.addValue(0, "Total", "Cabelo e Barba");
            ds.addValue(0, "Total", "Degrade");
            ds.addValue(0, "Total", "Maquina");
        }

        // cria o gráfico
        JFreeChart grafico = ChartFactory.createBarChart(
                "Total de Atendimentos: " + atendimentos,
                "Quantidade", "",
                ds,
                PlotOrientation.HORIZONTAL, false, true, false);
        CategoryPlot categoryPlot = grafico.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.BLACK);

        //range em representação int
        CategoryAxis xAxis = categoryPlot.getDomainAxis();
        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartPanel chartPanel = new ChartPanel(grafico);
        jPanel_graficoQuantidade.removeAll();
        jPanel_graficoQuantidade.add(chartPanel, BorderLayout.CENTER);
        jPanel_graficoQuantidade.validate();

    }

    private void criaGraficoValores(Relatorio relatorio) {

        DefaultPieDataset dataset = new DefaultPieDataset();

        CurrencyUnit real = CurrencyUnit.of("BRL");
        Money total = Money.of(real, 0);

        if (relatorio != null) {
            dataset.setValue("Bebidas " + relatorio.getTotalBebidas(), relatorio.getTotalBebidas());
            dataset.setValue("Produtos " + relatorio.getTotalProdutos(), relatorio.getTotalProdutos());
            dataset.setValue("Serviço " + relatorio.getTotalServico(), relatorio.getTotalServico());
            dataset.setValue("Outros " + relatorio.getTotalOutros(), relatorio.getTotalOutros());
            total = Money.of(real, relatorio.getTotalDinheiro().add(relatorio.getTotalCartao()));

        } else {
            dataset.setValue("Bebidas " + 0, 0);
            dataset.setValue("Produtos " + 0, 0);
            dataset.setValue("Serviço " + 0, 0);
            dataset.setValue("Outros " + 0, 0);
            total = Money.of(real, 0);

        }

        // cria o gráfico
        JFreeChart chart = ChartFactory.createPieChart(
                "Total: "+ total.getAmount() + " R$",
                dataset, // data    
                true, // include legend   
                true,
                false);

        ChartPanel chartPanel = new ChartPanel(chart);
        jPanel_graficoValores.removeAll();
        jPanel_graficoValores.add(chartPanel, BorderLayout.CENTER);
        jPanel_graficoValores.validate();

    }

    private void criaGraficoValoresTotais(Relatorio relatorio) {

        DefaultCategoryDataset ds = new DefaultCategoryDataset();
        
        CurrencyUnit real = CurrencyUnit.of("BRL");
        Money total = Money.of(real, 0);
        
        if (relatorio != null) {
            total = Money.of(real, relatorio.getTotalDinheiro().add(relatorio.getTotalCartao()));
            ds.addValue(relatorio.getTotalDinheiro(), "Total", "Dinheiro");
            ds.addValue(relatorio.getTotalCartao(), "Total", "Cartão");
        } else {
            total = Money.of(real, 0);
            ds.addValue(0, "Total", "Dinheiro");
            ds.addValue(0, "Total", "Cartão");
        }

        // cria o gráfico
        JFreeChart grafico = ChartFactory.createBarChart(
                "Total: "+ total.getAmount() + " R$",
                "Forma de Pagamento", "",
                ds,
                PlotOrientation.HORIZONTAL, false, true, false);
        CategoryPlot categoryPlot = grafico.getCategoryPlot();
        categoryPlot.setRangeGridlinePaint(Color.BLACK);

        ChartPanel chartPanel = new ChartPanel(grafico);
        jPanel_graficoValoresTotais.removeAll();
        jPanel_graficoValoresTotais.add(chartPanel, BorderLayout.CENTER);
        jPanel_graficoValoresTotais.validate();

    }

    private void preencheTabela(Relatorio relatorio) {

        SimpleDateFormat data = new SimpleDateFormat("yyyy-MM-dd");
        String dia = data.format(jDateChooser_dia.getDate());

        String sql = "SELECT *FROM vendas WHERE data = ?";
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Hora", "Funcionario", "Bebidas", "Produtos", "Outros", "Descrição", "Valor", "Serviço", "Pagamento",  "TOTAL"};

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        try (PreparedStatement pst = conn.prepareStatement(sql)) {

            pst.setString(1, dia);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {

                boolean ativo = rs.getBoolean("outros");
                String outros = ativo ? "Sim" : "Não";
                
                CurrencyUnit real = CurrencyUnit.of("BRL");
                Money totalVenda = Money.of(real, rs.getBigDecimal("totalVenda"));
                Money outrosValor = Money.of(real, rs.getBigDecimal("valorOutros"));
                
                
                dados.add(new Object[]{
                    rs.getString("hora"),
                    rs.getString("nomeFuncionario"),
                    rs.getInt("quantidadeBebidas"),
                    rs.getInt("quantidadeProdutos"),
                    outros,
                    rs.getString("descricaoOutros"),
                    outrosValor,
                    rs.getString("nomeServico"),
                    rs.getString("pagamento"),
                    totalVenda

                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());

        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTable_relatorio.setModel(modelo);
        jTable_relatorio.setFont(new java.awt.Font("Arial", 0, 16));

        //Hora
        jTable_relatorio.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTable_relatorio.getColumnModel().getColumn(0).setResizable(false);

        //Funcionario
        jTable_relatorio.getColumnModel().getColumn(1).setPreferredWidth(110);
        jTable_relatorio.getColumnModel().getColumn(1).setResizable(false);

        //Bebidas
        jTable_relatorio.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTable_relatorio.getColumnModel().getColumn(2).setResizable(false);

        //Produtos
        jTable_relatorio.getColumnModel().getColumn(3).setPreferredWidth(65);
        jTable_relatorio.getColumnModel().getColumn(3).setResizable(false);
        
        //Outros
        jTable_relatorio.getColumnModel().getColumn(4).setPreferredWidth(65);
        jTable_relatorio.getColumnModel().getColumn(4).setResizable(false);
        
        
        //DescricaoOutros
        jTable_relatorio.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTable_relatorio.getColumnModel().getColumn(5).setResizable(false);
        
        //ValorOutros
        jTable_relatorio.getColumnModel().getColumn(6).setPreferredWidth(120);
        jTable_relatorio.getColumnModel().getColumn(6).setResizable(false);

        //Servicos
        jTable_relatorio.getColumnModel().getColumn(7).setPreferredWidth(120);
        jTable_relatorio.getColumnModel().getColumn(7).setResizable(false);

        //Pagamentos
        jTable_relatorio.getColumnModel().getColumn(8).setPreferredWidth(110);
        jTable_relatorio.getColumnModel().getColumn(8).setResizable(false);
        
        //Total
        jTable_relatorio.getColumnModel().getColumn(9).setPreferredWidth(90);
        jTable_relatorio.getColumnModel().getColumn(9).setResizable(false);

        jTable_relatorio.getTableHeader().setReorderingAllowed(false);
        jTable_relatorio.setAutoResizeMode(jTable_relatorio.AUTO_RESIZE_OFF);

        jTable_relatorio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();

    }

    private void preenchetabelaValoresFuncionarios(Relatorio relatorio) {

        SimpleDateFormat data = new SimpleDateFormat("yyyy-MM-dd");
        String dia = data.format(jDateChooser_dia.getDate());

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        String sql = "SELECT  idFuncionario, nomeFuncionario, "
                + "SUM(CASE WHEN totalBebidas != '' THEN totalBebidas ELSE 0 END) as totalBebidas, "
                + "SUM(CASE WHEN totalProdutos != '' THEN totalProdutos ELSE 0 END) as totalProdutos, "
                + "SUM(CASE WHEN totalServico != '' THEN totalServico ELSE 0 END) as totalServicos, "
                + "SUM(CASE WHEN valorOutros != '0' THEN valorOutros ELSE 0 END) as totalOutros, "
                + "sum(totalVenda) as totalVenda, "
                + "count(*) as atendimentos "
                + "FROM vendas "
                + "WHERE data  = ? GROUP BY nomeFuncionario";

        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Nome", "Atendimentos", "Total Bebidas", "Total Produtos", "Total Serviço" ,"Total Outros", "Total Venda"};

        try (PreparedStatement pst = conn.prepareStatement(sql)) {

            pst.setString(1, dia);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {

                CurrencyUnit real = CurrencyUnit.of("BRL");
                Money totalBebidas = Money.of(real, rs.getBigDecimal("totalBebidas"));
                Money totalProdutos = Money.of(real, rs.getBigDecimal("totalProdutos"));
                Money totalServicos = Money.of(real, rs.getBigDecimal("totalServicos"));
                Money totalOutros = Money.of(real, rs.getBigDecimal("totalOutros"));
                Money totalVenda = Money.of(real, rs.getBigDecimal("totalVenda"));
                
                
                dados.add(new Object[]{
                    rs.getString("nomeFuncionario"),
                    rs.getInt("atendimentos"),
                    totalBebidas,
                    totalProdutos,
                    totalServicos,
                    totalOutros,
                    totalVenda

                });
            }

            conexao.desconectar();

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTable_relatorioPorFuncionario.setModel(modelo);
        jTable_relatorioPorFuncionario.setFont(new java.awt.Font("Arial", 0, 16));

        //NOME
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(0).setResizable(false);

        //ATENDIMENTOS
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(1).setPreferredWidth(90);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(1).setResizable(false);

        //TOTAL BEBIDAS
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(2).setPreferredWidth(90);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(2).setResizable(false);

        //TOTAL PRODUTOS
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(3).setPreferredWidth(90);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(3).setResizable(false);

        //TOTAL SERVICOS
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(4).setPreferredWidth(90);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(4).setResizable(false);
        
        //TOTAL OUTROS
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(5).setPreferredWidth(90);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(5).setResizable(false);

        //TOTAL VENDAS
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(6).setPreferredWidth(90);
        jTable_relatorioPorFuncionario.getColumnModel().getColumn(6).setResizable(false);

        
        jTable_relatorio.getTableHeader().setReorderingAllowed(false);
        jTable_relatorio.setAutoResizeMode(jTable_relatorio.AUTO_RESIZE_OFF);

        jTable_relatorio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();

    }

    private void limpaTabela() {
    }

}
