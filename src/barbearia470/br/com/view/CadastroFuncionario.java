package barbearia470.br.com.view;

import barbearia470.br.com.DAO.FuncionarioDAO;
import barbearia470.br.com.conexao.Conexao;
import barbearia470.br.com.model.Funcionario;
import barbearia470.br.com.tabelasModel.ModeloTabela;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

public class CadastroFuncionario extends javax.swing.JFrame {

    /**
     * Creates new form CadastroFuncionario
     */
    public CadastroFuncionario() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);

        jButton_editar.setEnabled(false);
        jButton_excluir.setEnabled(false);
        jButton_salvar.setEnabled(false);

        jTextField_funcionarioID.setVisible(false);

        somenteLeitura();
        preencheTabela();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_nome = new javax.swing.JLabel();
        jTextField_nome = new javax.swing.JTextField();
        jLabel_telefone = new javax.swing.JLabel();
        jFormattedTextField_telefone = new javax.swing.JFormattedTextField();
        jCheckBox_ativo = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField_email = new javax.swing.JTextField();
        jLabel_dataContratado = new javax.swing.JLabel();
        jLabel = new javax.swing.JLabel();
        jLabel_cpf = new javax.swing.JLabel();
        jFormattedTextField_cpf = new javax.swing.JFormattedTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_tabelaFuncionarios = new javax.swing.JTable();
        jButton_salvar = new javax.swing.JButton();
        jButton_editar = new javax.swing.JButton();
        jTextField_funcionarioID = new javax.swing.JTextField();
        jButton_novo = new javax.swing.JButton();
        jButton_excluir = new javax.swing.JButton();
        jDateChooser_dataContratado = new com.toedter.calendar.JDateChooser();
        jDateChooser_dataDispendado = new com.toedter.calendar.JDateChooser();
        jLabel_cnpj = new javax.swing.JLabel();
        jFormattedTextField_cnpj = new javax.swing.JFormattedTextField();
        jMenuBar_menuBar = new javax.swing.JMenuBar();
        jMenu_cadastro = new javax.swing.JMenu();
        jMenuItem_clientes = new javax.swing.JMenuItem();
        jMenuItem_funcionarios = new javax.swing.JMenuItem();
        jMenuItem_servicos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_vendas_hoje = new javax.swing.JMenuItem();
        jMenu_relatorio = new javax.swing.JMenu();
        jMenuItem_relatorioPorDia = new javax.swing.JMenuItem();
        jMenuItem_porPeriodo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_confEmail = new javax.swing.JMenuItem();
        jMenu_sair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro funcionario");

        jLabel_nome.setText("Nome:");

        jLabel_telefone.setText("Telefone:");

        try {
            jFormattedTextField_telefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jCheckBox_ativo.setText("Ativo");

        jLabel3.setText("E-mail:");

        jLabel_dataContratado.setText("Contratado:");

        jLabel.setText("Dispensado:");

        jLabel_cpf.setText("CPF:");

        try {
            jFormattedTextField_cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTable_tabelaFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_tabelaFuncionarios.setRowHeight(21);
        jTable_tabelaFuncionarios.setShowGrid(true);
        jTable_tabelaFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_tabelaFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_tabelaFuncionarios);

        jButton_salvar.setText("Salvar");
        jButton_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salvarActionPerformed(evt);
            }
        });

        jButton_editar.setText("Editar");
        jButton_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_editarActionPerformed(evt);
            }
        });

        jButton_novo.setText("Novo");
        jButton_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_novoActionPerformed(evt);
            }
        });

        jButton_excluir.setText("Excluir");
        jButton_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_excluirActionPerformed(evt);
            }
        });

        jLabel_cnpj.setText("CNPJ:");

        try {
            jFormattedTextField_cnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/0001-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jMenu_cadastro.setText("Cadastro");

        jMenuItem_clientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber.png"))); // NOI18N
        jMenuItem_clientes.setText("Clientes");
        jMenuItem_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clientesActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_clientes);

        jMenuItem_funcionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber_funcionario.png"))); // NOI18N
        jMenuItem_funcionarios.setText("Funcionários");
        jMenuItem_funcionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_funcionariosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_funcionarios);

        jMenuItem_servicos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barberiro.png"))); // NOI18N
        jMenuItem_servicos.setText("Serviços/Produtos");
        jMenuItem_servicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_servicosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_servicos);

        jMenuBar_menuBar.add(jMenu_cadastro);

        jMenu2.setText("Vendas");

        jMenuItem_vendas_hoje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/list.png"))); // NOI18N
        jMenuItem_vendas_hoje.setText("Vendas do dia");
        jMenuItem_vendas_hoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_vendas_hojeActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_vendas_hoje);

        jMenuBar_menuBar.add(jMenu2);

        jMenu_relatorio.setText("Relatorio");

        jMenuItem_relatorioPorDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/progress-report.png"))); // NOI18N
        jMenuItem_relatorioPorDia.setText("Por dia");
        jMenuItem_relatorioPorDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_relatorioPorDiaActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_relatorioPorDia);

        jMenuItem_porPeriodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/computer-monitor-with-bar-graph.png"))); // NOI18N
        jMenuItem_porPeriodo.setText("Por periodo");
        jMenuItem_porPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_porPeriodoActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_porPeriodo);

        jMenuBar_menuBar.add(jMenu_relatorio);

        jMenu1.setText("Configuração");

        jMenuItem_confEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/message.png"))); // NOI18N
        jMenuItem_confEmail.setText("Email");
        jMenuItem_confEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_confEmailActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_confEmail);

        jMenuBar_menuBar.add(jMenu1);

        jMenu_sair.setText("Sair");
        jMenuBar_menuBar.add(jMenu_sair);

        setJMenuBar(jMenuBar_menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_dataContratado)
                                    .addComponent(jLabel3))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser_dataContratado, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField_email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(jLabel_cnpj)
                                .addGap(18, 18, 18)
                                .addComponent(jFormattedTextField_cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel_nome)
                                        .addGap(35, 35, 35)
                                        .addComponent(jTextField_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(100, 100, 100))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel_telefone, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel_cpf, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(149, 149, 149)
                                                .addComponent(jCheckBox_ativo)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel)))
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedTextField_telefone)
                                    .addComponent(jFormattedTextField_cpf)
                                    .addComponent(jDateChooser_dataDispendado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_salvar)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_editar)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_excluir)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_novo))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jTextField_funcionarioID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 113, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel_nome)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addComponent(jLabel3))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel_cpf)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addComponent(jLabel_dataContratado))
                                                    .addComponent(jDateChooser_dataContratado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(jLabel_cnpj)
                                                    .addComponent(jFormattedTextField_cnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jFormattedTextField_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel_telefone))
                                        .addGap(22, 22, 22)
                                        .addComponent(jFormattedTextField_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jCheckBox_ativo)
                                    .addComponent(jLabel)))
                            .addComponent(jDateChooser_dataDispendado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_salvar)
                            .addComponent(jButton_editar)
                            .addComponent(jButton_excluir)
                            .addComponent(jButton_novo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField_funcionarioID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable_tabelaFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_tabelaFuncionariosMouseClicked

        somenteLeitura();
        limpaCampos();

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        String idFuncionario = "" + jTable_tabelaFuncionarios.getValueAt(jTable_tabelaFuncionarios.getSelectedRow(), 0);//0 == coluna da tabela
        String sql = "select *from Funcionarios where funincionarioID = '" + idFuncionario + "' ";

        jButton_salvar.setEnabled(false);
        jButton_editar.setEnabled(true);
        jButton_excluir.setEnabled(true);
        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {

                jTextField_nome.setText(rs.getString("nome"));
                jTextField_email.setText(rs.getString("email"));
                jFormattedTextField_telefone.setText(rs.getString("telefone"));
                jFormattedTextField_cpf.setText(rs.getString("cpf"));
                jFormattedTextField_cnpj.setText(rs.getString("cnpj"));

                SimpleDateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
                if (rs.getString("dataDispensado") != null) {

                    Date dataDispensado = (Date) dia.parse(rs.getString("dataDispensado"));
                    jDateChooser_dataDispendado.setDate(dataDispensado);
                }

                Date dataContratado = (Date) dia.parse(rs.getString("dataContratado"));
                jDateChooser_dataContratado.setDate(dataContratado);

                jCheckBox_ativo.setSelected(rs.getBoolean("ativo"));
                jTextField_funcionarioID.setText(String.valueOf(rs.getInt("funincionarioID")));

            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (ParseException ex) {
            Logger.getLogger(CadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }

        conexao.desconectar();

    }//GEN-LAST:event_jTable_tabelaFuncionariosMouseClicked

    private void jButton_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salvarActionPerformed

        //salvar
        if (jTextField_funcionarioID.getText().isEmpty()) {

            if (camposObrigatorios()) {

                Funcionario funcionario = pegaFuncionarioNovo();
                FuncionarioDAO funcionarioDAO = new FuncionarioDAO();

                if (funcionarioDAO.salvar(funcionario)) {
                    preencheTabela();

                    limpaCampos();
                    somenteLeitura();
                    jButton_salvar.setEnabled(false);
                    jButton_novo.setEnabled(true);

                }
            } else {
                mensagemCamposObrigatorios();
            }

        } else {
            //Editar

            if (camposObrigatorios()) {

                Funcionario funcionario = pegaFuncionarioEdicao();
                FuncionarioDAO funcionarioDAO = new FuncionarioDAO();

                if (funcionarioDAO.editar(funcionario)) {
                    preencheTabela();

                    limpaCampos();
                    somenteLeitura();
                    jButton_salvar.setEnabled(false);

                }

            } else {
                mensagemCamposObrigatorios();
            }

        }


    }//GEN-LAST:event_jButton_salvarActionPerformed

    private void jButton_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editarActionPerformed

        tornarCamposEditavel();
        jButton_salvar.setEnabled(true);
        jButton_editar.setEnabled(false);
        jButton_excluir.setEnabled(false);

    }//GEN-LAST:event_jButton_editarActionPerformed

    private void jButton_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_novoActionPerformed

        limpaCampos();
        tornarCamposEditavel();
        jButton_salvar.setEnabled(true);
        jButton_editar.setEnabled(false);
        jButton_excluir.setEnabled(false);


    }//GEN-LAST:event_jButton_novoActionPerformed

    private void jButton_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_excluirActionPerformed

        FuncionarioDAO funcionarioDAO = new FuncionarioDAO();

        if (funcionarioDAO.excluir(Integer.parseInt(jTextField_funcionarioID.getText()))) {
            JOptionPane.showMessageDialog(null, "Funcionario excluido com sucesso");
            preencheTabela();
            limpaCampos();
            jButton_excluir.setEnabled(false);
            jButton_editar.setEnabled(false);

        } else {
            JOptionPane.showMessageDialog(null, "Erro ao tentar excluir");
        }


    }//GEN-LAST:event_jButton_excluirActionPerformed

    private void jMenuItem_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clientesActionPerformed

        CadastroCliente cadastroCliente = new CadastroCliente();
        cadastroCliente.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_clientesActionPerformed

    private void jMenuItem_funcionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_funcionariosActionPerformed

    }//GEN-LAST:event_jMenuItem_funcionariosActionPerformed

    private void jMenuItem_servicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_servicosActionPerformed

        CadastroServicoProdutos cadastroServico = new CadastroServicoProdutos();
        cadastroServico.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_servicosActionPerformed

    private void jMenuItem_relatorioPorDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_relatorioPorDiaActionPerformed

        RelatorioPorDia relatorioPorDia = new RelatorioPorDia();
        relatorioPorDia.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_relatorioPorDiaActionPerformed

    private void jMenuItem_porPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_porPeriodoActionPerformed

        RelatorioGeral relatorioGeral = new RelatorioGeral();
        relatorioGeral.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_porPeriodoActionPerformed

    private void jMenuItem_vendas_hojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_vendas_hojeActionPerformed
        MenuPrincipal menuPrincipal = new MenuPrincipal();
        menuPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_vendas_hojeActionPerformed

    private void jMenuItem_confEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_confEmailActionPerformed

        ConfEmail configuracaoEmail = new ConfEmail();
        configuracaoEmail.setVisible(true);
    }//GEN-LAST:event_jMenuItem_confEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_editar;
    private javax.swing.JButton jButton_excluir;
    private javax.swing.JButton jButton_novo;
    private javax.swing.JButton jButton_salvar;
    private javax.swing.JCheckBox jCheckBox_ativo;
    private com.toedter.calendar.JDateChooser jDateChooser_dataContratado;
    private com.toedter.calendar.JDateChooser jDateChooser_dataDispendado;
    private javax.swing.JFormattedTextField jFormattedTextField_cnpj;
    private javax.swing.JFormattedTextField jFormattedTextField_cpf;
    private javax.swing.JFormattedTextField jFormattedTextField_telefone;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_cnpj;
    private javax.swing.JLabel jLabel_cpf;
    private javax.swing.JLabel jLabel_dataContratado;
    private javax.swing.JLabel jLabel_nome;
    private javax.swing.JLabel jLabel_telefone;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar_menuBar;
    private javax.swing.JMenuItem jMenuItem_clientes;
    private javax.swing.JMenuItem jMenuItem_confEmail;
    private javax.swing.JMenuItem jMenuItem_funcionarios;
    private javax.swing.JMenuItem jMenuItem_porPeriodo;
    private javax.swing.JMenuItem jMenuItem_relatorioPorDia;
    private javax.swing.JMenuItem jMenuItem_servicos;
    private javax.swing.JMenuItem jMenuItem_vendas_hoje;
    private javax.swing.JMenu jMenu_cadastro;
    private javax.swing.JMenu jMenu_relatorio;
    private javax.swing.JMenu jMenu_sair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_tabelaFuncionarios;
    private javax.swing.JTextField jTextField_email;
    private javax.swing.JTextField jTextField_funcionarioID;
    private javax.swing.JTextField jTextField_nome;
    // End of variables declaration//GEN-END:variables

    private void preencheTabela() {

        String sql = "select *from Funcionarios";
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID",
            "Nome",
            "Telefone",
            "CPF",
            "CNJP",
            "Email",
            "Data Contratado",
            "Data Dispensado",
            "Ativo"};

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {

                boolean ativo = rs.getBoolean("ativo");
                String sAtivo = ativo ? "Sim" : "Não";

                dados.add(new Object[]{
                    rs.getInt("funincionarioID"),
                    rs.getString("nome"),
                    rs.getString("telefone"),
                    rs.getString("cpf"),
                    rs.getString("cnpj"),
                    rs.getString("email"),
                    rs.getString("dataContratado"),
                    rs.getString("dataDispensado"),
                    sAtivo

                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTable_tabelaFuncionarios.setModel(modelo);
        jTable_tabelaFuncionarios.setFont(new java.awt.Font("Arial", 0, 16));

        //id
        jTable_tabelaFuncionarios.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(0).setResizable(false);

        //nome
        jTable_tabelaFuncionarios.getColumnModel().getColumn(1).setPreferredWidth(105);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(1).setResizable(false);

        //telefone
        jTable_tabelaFuncionarios.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(2).setResizable(false);

        //cpf
        jTable_tabelaFuncionarios.getColumnModel().getColumn(3).setPreferredWidth(160);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(3).setResizable(false);
        
        //cnpj
        jTable_tabelaFuncionarios.getColumnModel().getColumn(4).setPreferredWidth(180);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(4).setResizable(false);

        //email
        jTable_tabelaFuncionarios.getColumnModel().getColumn(5).setPreferredWidth(250);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(5).setResizable(false);

        //contratado
        jTable_tabelaFuncionarios.getColumnModel().getColumn(6).setPreferredWidth(110);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(6).setResizable(false);

        //dispensado
        jTable_tabelaFuncionarios.getColumnModel().getColumn(7).setPreferredWidth(110);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(7).setResizable(false);

        //ativo
        jTable_tabelaFuncionarios.getColumnModel().getColumn(8).setPreferredWidth(50);
        jTable_tabelaFuncionarios.getColumnModel().getColumn(8).setResizable(false);

        jTable_tabelaFuncionarios.getTableHeader().setReorderingAllowed(false);
        jTable_tabelaFuncionarios.setAutoResizeMode(jTable_tabelaFuncionarios.AUTO_RESIZE_OFF);

        jTable_tabelaFuncionarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();

    }

    private Funcionario pegaFuncionarioEdicao() {

        SimpleDateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
        dia.format(jDateChooser_dataContratado.getDate());

        Funcionario funcionario = new Funcionario();

        funcionario.setNome(jTextField_nome.getText());
        funcionario.setEmail(jTextField_email.getText());
        funcionario.setTelefone(jFormattedTextField_telefone.getText());
        funcionario.setCPF(jFormattedTextField_cpf.getText());
        funcionario.setCNPJ(jFormattedTextField_cnpj.getText());
        funcionario.setDataContratado(dia.format(jDateChooser_dataContratado.getDate()));
        
        if (jDateChooser_dataDispendado.getDate() != null) {
            funcionario.setDataDispensado(dia.format(jDateChooser_dataDispendado.getDate()));
        }
        
        funcionario.setAtivo(jCheckBox_ativo.isSelected());
        funcionario.setFuncionarioId(Integer.parseInt(jTextField_funcionarioID.getText()));

        return funcionario;

    }

    private Funcionario pegaFuncionarioNovo() {

        SimpleDateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
        dia.format(jDateChooser_dataContratado.getDate());

        Funcionario funcionario = new Funcionario();

        funcionario.setNome(jTextField_nome.getText());
        funcionario.setEmail(jTextField_email.getText());
        funcionario.setTelefone(jFormattedTextField_telefone.getText());
        funcionario.setCPF(jFormattedTextField_cpf.getText());
        funcionario.setCNPJ(jFormattedTextField_cnpj.getText());
        funcionario.setDataContratado(dia.format(jDateChooser_dataContratado.getDate()));

        if (jDateChooser_dataDispendado.getDate() != null) {
            funcionario.setDataDispensado(dia.format(jDateChooser_dataDispendado.getDate()));
        }

        funcionario.setAtivo(jCheckBox_ativo.isSelected());

        return funcionario;

    }

    private void limpaCampos() {

        jTextField_nome.setText(null);
        jTextField_email.setText(null);
        jFormattedTextField_telefone.setText(null);
        jFormattedTextField_cpf.setText(null);
        jFormattedTextField_cnpj.setText(null);
        jDateChooser_dataContratado.setDate(null);
        jDateChooser_dataDispendado.setDate(null);
        jCheckBox_ativo.setSelected(false);
        jTextField_funcionarioID.setText(null);

    }

    private void somenteLeitura() {

        jTextField_nome.setEnabled(false);
        jTextField_email.setEnabled(false);
        jFormattedTextField_telefone.setEnabled(false);
        jFormattedTextField_cpf.setEnabled(false);
        jFormattedTextField_cnpj.setEnabled(false);
        jDateChooser_dataContratado.setEnabled(false);
        jDateChooser_dataDispendado.setEnabled(false);
        jCheckBox_ativo.setEnabled(false);
        jTextField_funcionarioID.setEnabled(false);
    }

    private void tornarCamposEditavel() {

        jTextField_nome.setEnabled(true);
        jTextField_email.setEnabled(true);
        jFormattedTextField_telefone.setEnabled(true);
        jFormattedTextField_cpf.setEnabled(true);
        jFormattedTextField_cnpj.setEnabled(true);
        jDateChooser_dataContratado.setEnabled(true);
        jDateChooser_dataDispendado.setEnabled(true);
        jCheckBox_ativo.setEnabled(true);
        jTextField_funcionarioID.setEnabled(true);
    }

    private boolean camposObrigatorios() {

        SimpleDateFormat dia = new SimpleDateFormat("dd/MM/yyyy");

        String nome = jTextField_nome.getText();
        String telefone = jFormattedTextField_telefone.getText().replaceAll("[() -]", "");
        String cpf = jFormattedTextField_cpf.getText().replaceAll("[. -]", "");
        String cnpj = jFormattedTextField_cnpj.getText().replace("[. - / 0001]", "");

        String dataContratado = dia.format(jDateChooser_dataContratado.getDate());

        if (nome.isEmpty() || telefone.isEmpty() || cpf.isEmpty() || dataContratado.isEmpty() || cnpj.isEmpty()) {
            return false;
        }

        return true;
    }

    private void mensagemCamposObrigatorios() {

        String nome = jLabel_nome.getText();
        String telefone = jLabel_telefone.getText();
        String cpf = jLabel_cpf.getText();
        String dataContratado = jLabel_dataContratado.getText();
        String cnpj = jLabel_cnpj.getText();

        JOptionPane.showMessageDialog(null, "Os Campos "
                + nome + " "
                + telefone + " "
                + dataContratado + " "
                + cpf + " e "
                + cnpj + 
                " são obrigatoorios");

    }

}
