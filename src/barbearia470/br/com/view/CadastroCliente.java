package barbearia470.br.com.view;

import barbearia470.br.com.DAO.ClienteDAO;
import barbearia470.br.com.conexao.Conexao;
import barbearia470.br.com.model.Cliente;
import barbearia470.br.com.tabelasModel.ModeloTabela;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

public class CadastroCliente extends javax.swing.JFrame {

    /**
     * Creates new form CadastroCliente
     */
    public CadastroCliente() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        preencheTabela();
        jTextField_id.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_nome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_email = new javax.swing.JTextField();
        jFormattedTextField_telefone = new javax.swing.JFormattedTextField();
        jCheckBox_notificacao = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_relatorio = new javax.swing.JTable();
        jButton_salvar = new javax.swing.JButton();
        jButton_excluir = new javax.swing.JButton();
        jTextField_nome_pesquisa = new javax.swing.JTextField();
        jButton_pesquisar = new javax.swing.JButton();
        jDateChooser_nascimento = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jTextField_sobreNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField_id = new javax.swing.JTextField();
        jButton_novo = new javax.swing.JButton();
        jMenuBar_menuBar = new javax.swing.JMenuBar();
        jMenu_cadastro = new javax.swing.JMenu();
        jMenuItem_clientes = new javax.swing.JMenuItem();
        jMenuItem_funcionarios = new javax.swing.JMenuItem();
        jMenuItem_servicos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_vendaDoDia = new javax.swing.JMenuItem();
        jMenu_relatorio = new javax.swing.JMenu();
        jMenuItem_relatorioPorDia = new javax.swing.JMenuItem();
        jMenuItem_porPeriodo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_confEmail = new javax.swing.JMenuItem();
        jMenu_sair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setLocation(new java.awt.Point(0, 280));
        setPreferredSize(new java.awt.Dimension(720, 460));

        jLabel1.setText("Nome:");

        jLabel2.setText("Telefone:");

        jLabel3.setText("E-mail:");

        try {
            jFormattedTextField_telefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jCheckBox_notificacao.setText("Enviar notificação");

        jTable_relatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_relatorio.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable_relatorio.setRowHeight(21);
        jTable_relatorio.setShowGrid(true);
        jTable_relatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_relatorioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_relatorio);

        jButton_salvar.setText("Salvar");
        jButton_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salvarActionPerformed(evt);
            }
        });

        jButton_excluir.setText("Excluir");
        jButton_excluir.setEnabled(false);
        jButton_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_excluirActionPerformed(evt);
            }
        });

        jButton_pesquisar.setText("Pesquisar");
        jButton_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pesquisarActionPerformed(evt);
            }
        });

        jLabel4.setText("Data Nascimento:");

        jLabel5.setText("Sobre nome:");

        jTextField_id.setEnabled(false);

        jButton_novo.setText("Novo");
        jButton_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_novoActionPerformed(evt);
            }
        });

        jMenu_cadastro.setText("Cadastro");

        jMenuItem_clientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber.png"))); // NOI18N
        jMenuItem_clientes.setText("Clientes");
        jMenuItem_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clientesActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_clientes);

        jMenuItem_funcionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber_funcionario.png"))); // NOI18N
        jMenuItem_funcionarios.setText("Funcionários");
        jMenuItem_funcionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_funcionariosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_funcionarios);

        jMenuItem_servicos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barberiro.png"))); // NOI18N
        jMenuItem_servicos.setText("Serviços/Produtos");
        jMenuItem_servicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_servicosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_servicos);

        jMenuBar_menuBar.add(jMenu_cadastro);

        jMenu2.setText("Vendas");

        jMenuItem_vendaDoDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/list.png"))); // NOI18N
        jMenuItem_vendaDoDia.setText("Vendas do Dia");
        jMenuItem_vendaDoDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_vendaDoDiaActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_vendaDoDia);

        jMenuBar_menuBar.add(jMenu2);

        jMenu_relatorio.setText("Relatorio");

        jMenuItem_relatorioPorDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/progress-report.png"))); // NOI18N
        jMenuItem_relatorioPorDia.setText("Por dia");
        jMenuItem_relatorioPorDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_relatorioPorDiaActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_relatorioPorDia);

        jMenuItem_porPeriodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/computer-monitor-with-bar-graph.png"))); // NOI18N
        jMenuItem_porPeriodo.setText("Por periodo");
        jMenuItem_porPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_porPeriodoActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_porPeriodo);

        jMenuBar_menuBar.add(jMenu_relatorio);

        jMenu1.setText("Configuração");

        jMenuItem_confEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/message.png"))); // NOI18N
        jMenuItem_confEmail.setText("Email");
        jMenuItem_confEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_confEmailActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_confEmail);

        jMenuBar_menuBar.add(jMenu1);

        jMenu_sair.setText("Sair");
        jMenuBar_menuBar.add(jMenu_sair);

        setJMenuBar(jMenuBar_menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_salvar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_excluir)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_novo)
                        .addGap(185, 185, 185)
                        .addComponent(jTextField_nome_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_pesquisar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jFormattedTextField_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField_id)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel1)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField_sobreNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                .addComponent(jTextField_nome, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField_email, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jCheckBox_notificacao)
                                .addComponent(jDateChooser_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_sobreNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jFormattedTextField_telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jDateChooser_nascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox_notificacao)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_salvar)
                    .addComponent(jButton_excluir)
                    .addComponent(jTextField_nome_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_pesquisar)
                    .addComponent(jButton_novo))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clientesActionPerformed

    }//GEN-LAST:event_jMenuItem_clientesActionPerformed

    private void jMenuItem_funcionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_funcionariosActionPerformed

        CadastroFuncionario cadastroFuncionario = new CadastroFuncionario();
        cadastroFuncionario.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_funcionariosActionPerformed

    private void jMenuItem_servicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_servicosActionPerformed

        CadastroServicoProdutos cadastroServico = new CadastroServicoProdutos();
        cadastroServico.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_servicosActionPerformed

    private void jMenuItem_relatorioPorDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_relatorioPorDiaActionPerformed

        RelatorioPorDia relatorioPorDia = new RelatorioPorDia();
        relatorioPorDia.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_relatorioPorDiaActionPerformed

    private void jMenuItem_porPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_porPeriodoActionPerformed

        RelatorioGeral relatorioGeral = new RelatorioGeral();
        relatorioGeral.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_porPeriodoActionPerformed

    private void jMenuItem_vendaDoDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_vendaDoDiaActionPerformed

        MenuPrincipal menuPrincipal = new MenuPrincipal();
        menuPrincipal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_vendaDoDiaActionPerformed

    private void jTable_relatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_relatorioMouseClicked

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        jButton_excluir.setEnabled(true);
        String idCliente = "" + jTable_relatorio.getValueAt(jTable_relatorio.getSelectedRow(), 0);//0 == coluna da tabela
        String sql = "select *from Clientes where id = '" + idCliente + "' ";

        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {

                jTextField_id.setText(String.valueOf(rs.getInt("id")));
                jTextField_nome.setText(rs.getString("nome"));
                jTextField_sobreNome.setText(rs.getString("sobreNome"));
                jTextField_email.setText(rs.getString("email"));
                jFormattedTextField_telefone.setText(rs.getString("telefone"));

                SimpleDateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
                if (rs.getString("dataNascimento") != null) {

                    Date dataNascimento = (Date) dia.parse(rs.getString("dataNascimento"));
                    jDateChooser_nascimento.setDate(dataNascimento);
                }

                jCheckBox_notificacao.setSelected(rs.getBoolean("notificacao"));

            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (ParseException ex) {
            Logger.getLogger(CadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }

        conexao.desconectar();
    }//GEN-LAST:event_jTable_relatorioMouseClicked

    private void jButton_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salvarActionPerformed

        ClienteDAO clienteDAO = new ClienteDAO();
        Cliente cliente = pegaCampos();

        if (!jTextField_id.getText().isEmpty()) {
            if (clienteDAO.editar(cliente)) {
                JOptionPane.showMessageDialog(null, "Cliente alterado com sucesso");
                limpaCampos();
                preencheTabela();
                jButton_excluir.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao alterar Cliente");
            }

        } else {

            if (verificaCamposObrigatorios()) {

                if (clienteDAO.salvar(cliente)) {
                    JOptionPane.showMessageDialog(null, "Cliente salvo com sucesso");
                    limpaCampos();
                    preencheTabela();
                } else {
                    JOptionPane.showMessageDialog(null, "Erro ao tentar salvar Cliente");
                }
            }
        }


    }//GEN-LAST:event_jButton_salvarActionPerformed

    private void jButton_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_excluirActionPerformed

        ClienteDAO clienteDAO = new ClienteDAO();

        if (clienteDAO.excluir(Integer.parseInt(jTextField_id.getText()))) {
            JOptionPane.showMessageDialog(null, "Cliente excluido com sucesso");
            preencheTabela();
            limpaCampos();
        }
    }//GEN-LAST:event_jButton_excluirActionPerformed

    private void jButton_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_novoActionPerformed
        jButton_excluir.setEnabled(false);
        jButton_salvar.setEnabled(true);
        limpaCampos();
    }//GEN-LAST:event_jButton_novoActionPerformed

    private void jButton_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pesquisarActionPerformed

        limpaCampos();
        if (!jTextField_nome_pesquisa.getText().isEmpty()) {
            if (!preencheTabelaPorNome(jTextField_nome_pesquisa.getText())) {
                jTextField_nome_pesquisa.setText(null);
                JOptionPane.showMessageDialog(null, "Não encontrado!");
                preencheTabela();
            }
        } else {
            preencheTabela();
            JOptionPane.showMessageDialog(null, "Por favor, informe o nome do cliente!");
        }

    }//GEN-LAST:event_jButton_pesquisarActionPerformed

    private void jMenuItem_confEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_confEmailActionPerformed

        ConfEmail configuracaoEmail = new ConfEmail();
        configuracaoEmail.setVisible(true);
    }//GEN-LAST:event_jMenuItem_confEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_excluir;
    private javax.swing.JButton jButton_novo;
    private javax.swing.JButton jButton_pesquisar;
    private javax.swing.JButton jButton_salvar;
    private javax.swing.JCheckBox jCheckBox_notificacao;
    private com.toedter.calendar.JDateChooser jDateChooser_nascimento;
    private javax.swing.JFormattedTextField jFormattedTextField_telefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar_menuBar;
    private javax.swing.JMenuItem jMenuItem_clientes;
    private javax.swing.JMenuItem jMenuItem_confEmail;
    private javax.swing.JMenuItem jMenuItem_funcionarios;
    private javax.swing.JMenuItem jMenuItem_porPeriodo;
    private javax.swing.JMenuItem jMenuItem_relatorioPorDia;
    private javax.swing.JMenuItem jMenuItem_servicos;
    private javax.swing.JMenuItem jMenuItem_vendaDoDia;
    private javax.swing.JMenu jMenu_cadastro;
    private javax.swing.JMenu jMenu_relatorio;
    private javax.swing.JMenu jMenu_sair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_relatorio;
    private javax.swing.JTextField jTextField_email;
    private javax.swing.JTextField jTextField_id;
    private javax.swing.JTextField jTextField_nome;
    private javax.swing.JTextField jTextField_nome_pesquisa;
    private javax.swing.JTextField jTextField_sobreNome;
    // End of variables declaration//GEN-END:variables

    private Cliente pegaCampos() {

        Cliente cliente = new Cliente();

        if (!jTextField_id.getText().isEmpty()) {
            cliente.setId(Integer.parseInt(jTextField_id.getText()));
        }

        SimpleDateFormat dia = new SimpleDateFormat("dd/MM/yyyy");
        if (jDateChooser_nascimento.getDate() != null) {
            String nascimento = dia.format(jDateChooser_nascimento.getDate());
            cliente.setData_nascimento(nascimento);
        }

        cliente.setNome(jTextField_nome.getText());
        cliente.setSobre_nome(jTextField_sobreNome.getText());

        if (!jFormattedTextField_telefone.getText().isEmpty()) {
            cliente.setTelefone(jFormattedTextField_telefone.getText());
        }

        cliente.setEmail(jTextField_email.getText());
        cliente.setEnviar_notificacao(jCheckBox_notificacao.isSelected());

        return cliente;
    }

    private boolean verificaCamposObrigatorios() {

        if (jTextField_nome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo nome é obrigatorio");
            return false;
        }
        if (jTextField_email.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo E-mail é obrigatorio");
            return false;
        }
        if (jDateChooser_nascimento.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Campo Data de Nascimento é obrigatorio");
            return false;
        }

        return true;

    }

    private void limpaCampos() {
        jTextField_nome.setText(null);
        jTextField_sobreNome.setText(null);
        jTextField_email.setText(null);
        jDateChooser_nascimento.setDate(null);
        jFormattedTextField_telefone.setText(null);
        jCheckBox_notificacao.setSelected(false);
    }

    private void preencheTabela() {

        String sql = "SELECT * FROM Clientes";
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{
            "ID",
            "Nome",
            "Sobre Nome",
            "Email",
            "Telefone",
            "Data Nascimento",
            "Envio Notificação"};

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {

                boolean ativo = rs.getBoolean("notificacao");
                String notificacao = ativo ? "Sim" : "Não";

                dados.add(new Object[]{
                    rs.getInt("id"),
                    rs.getString("nome"),
                    rs.getString("sobreNome"),
                    rs.getString("email"),
                    rs.getString("telefone"),
                    rs.getString("dataNascimento"),
                    notificacao

                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTable_relatorio.setModel(modelo);
        jTable_relatorio.setFont(new java.awt.Font("Arial", 0, 16));

        //id
        jTable_relatorio.getColumnModel().getColumn(0).setPreferredWidth(30);
        jTable_relatorio.getColumnModel().getColumn(0).setResizable(false);

        //nome
        jTable_relatorio.getColumnModel().getColumn(1).setPreferredWidth(244);
        jTable_relatorio.getColumnModel().getColumn(1).setResizable(false);

        //sobreNome
        jTable_relatorio.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable_relatorio.getColumnModel().getColumn(2).setResizable(false);

        //email
        jTable_relatorio.getColumnModel().getColumn(3).setPreferredWidth(250);
        jTable_relatorio.getColumnModel().getColumn(3).setResizable(false);

        //Telefone
        jTable_relatorio.getColumnModel().getColumn(4).setPreferredWidth(140);
        jTable_relatorio.getColumnModel().getColumn(4).setResizable(false);

        //Data nascimento
        jTable_relatorio.getColumnModel().getColumn(5).setPreferredWidth(120);
        jTable_relatorio.getColumnModel().getColumn(5).setResizable(false);

        //Notificaçao
        jTable_relatorio.getColumnModel().getColumn(6).setPreferredWidth(110);
        jTable_relatorio.getColumnModel().getColumn(6).setResizable(false);

        jTable_relatorio.getTableHeader().setReorderingAllowed(false);
        jTable_relatorio.setAutoResizeMode(jTable_relatorio.AUTO_RESIZE_OFF);

        jTable_relatorio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();

    }

    private boolean preencheTabelaPorNome(String nome) {

        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{
            "ID",
            "Nome",
            "Sobre Nome",
            "Email",
            "Telefone",
            "Data Nascimento",
            "Envio Notificação"};

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();
        String sql = "SELECT * FROM Clientes WHERE nome like '%" + nome + "%'";

        try (PreparedStatement pst = conn.prepareStatement(sql)) {
            ResultSet rs = pst.executeQuery();

            int cont = 0;
            while (rs.next()) {

                cont++;
                boolean ativo = rs.getBoolean("notificacao");
                String notificacao = ativo ? "Sim" : "Não";

                dados.add(new Object[]{
                    rs.getInt("id"),
                    rs.getString("nome"),
                    rs.getString("sobreNome"),
                    rs.getString("email"),
                    rs.getString("telefone"),
                    rs.getString("dataNascimento"),
                    notificacao

                });

            }

            if (cont == 0) {
                return false;
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTable_relatorio.setModel(modelo);

        jTable_relatorio.setFont(
                new java.awt.Font("Arial", 0, 16));

        //id
        jTable_relatorio.getColumnModel()
                .getColumn(0).setPreferredWidth(30);
        jTable_relatorio.getColumnModel()
                .getColumn(0).setResizable(false);

        //nome
        jTable_relatorio.getColumnModel()
                .getColumn(1).setPreferredWidth(244);
        jTable_relatorio.getColumnModel()
                .getColumn(1).setResizable(false);

        //sobreNome
        jTable_relatorio.getColumnModel()
                .getColumn(2).setPreferredWidth(200);
        jTable_relatorio.getColumnModel()
                .getColumn(2).setResizable(false);

        //email
        jTable_relatorio.getColumnModel()
                .getColumn(3).setPreferredWidth(250);
        jTable_relatorio.getColumnModel()
                .getColumn(3).setResizable(false);

        //Telefone
        jTable_relatorio.getColumnModel()
                .getColumn(4).setPreferredWidth(140);
        jTable_relatorio.getColumnModel()
                .getColumn(4).setResizable(false);

        //Data nascimento
        jTable_relatorio.getColumnModel()
                .getColumn(5).setPreferredWidth(120);
        jTable_relatorio.getColumnModel()
                .getColumn(5).setResizable(false);

        //Notificaçao
        jTable_relatorio.getColumnModel()
                .getColumn(6).setPreferredWidth(110);
        jTable_relatorio.getColumnModel()
                .getColumn(6).setResizable(false);

        jTable_relatorio.getTableHeader()
                .setReorderingAllowed(false);
        jTable_relatorio.setAutoResizeMode(jTable_relatorio.AUTO_RESIZE_OFF);

        jTable_relatorio.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();

        return true;

    }

}
