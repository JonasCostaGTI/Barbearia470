package barbearia470.br.com.view;

import barbearia470.br.com.DAO.ConfEmailDAO;
import barbearia470.br.com.DAO.FuncionarioDAO;
import barbearia470.br.com.DAO.ProdutoDAO;
import barbearia470.br.com.DAO.ServicoDAO;
import barbearia470.br.com.DAO.VendaDAO;
import barbearia470.br.com.conexao.Conexao;
import barbearia470.br.com.model.ConfiguracaoEmail;
import barbearia470.br.com.model.EnvioAutomaticoEmail;
import barbearia470.br.com.model.Funcionario;
import barbearia470.br.com.model.Servico;
import barbearia470.br.com.model.Venda;
import barbearia470.br.com.tabelasModel.ModeloTabela;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.Timer;
import org.joda.money.CurrencyUnit;
import org.joda.money.Money;

public class MenuPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);

        jLabel_agora.setText(pegaDataAtualPainel());
        jTextField_idVenda.setVisible(false);
        jLabel_sifra_servico.setVisible(false);

        pegaHoraAtual();
        pegaDataHoraAtual();
        pegaServicos();
        pegaFuncionarios();
        preencheTabela();

        if (diaDeEmailAutomatico() && possoMandarEmail()) {
            Timer timer = new Timer(120000, new EnvioAutomaticoEmail());//120000 = 2min
            timer.start();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_formaPagamento = new javax.swing.ButtonGroup();
        jComboBox_barbeiro = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox_servico = new javax.swing.JComboBox();
        jCheckBox_bebidas = new javax.swing.JCheckBox();
        jSpinner_chope_quantidade = new javax.swing.JSpinner();
        jSpinner_cerveja_quantidade = new javax.swing.JSpinner();
        jSpinner_refri_quantidade = new javax.swing.JSpinner();
        jSpinner_agua_quantidade = new javax.swing.JSpinner();
        jCheckBox_produtos = new javax.swing.JCheckBox();
        jSpinner_pomada_quantidade = new javax.swing.JSpinner();
        jSpinner_gel_quantidade = new javax.swing.JSpinner();
        jSpinner_oleo_quantidade = new javax.swing.JSpinner();
        jLabel_chope = new javax.swing.JLabel();
        jLabel_cerveja = new javax.swing.JLabel();
        jLabel_refri = new javax.swing.JLabel();
        jLabel_agua = new javax.swing.JLabel();
        jLabel_pomada = new javax.swing.JLabel();
        jLabel_gel = new javax.swing.JLabel();
        jLabel_oleo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jRadioButton_dinheiro = new javax.swing.JRadioButton();
        jRadioButton_cartao = new javax.swing.JRadioButton();
        jButton_salvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_registroVenda = new javax.swing.JTable();
        jLabel_agora = new javax.swing.JLabel();
        jButton_editar = new javax.swing.JButton();
        jTextField_idVenda = new javax.swing.JTextField();
        jButton_excluir = new javax.swing.JButton();
        jLabel_cera = new javax.swing.JLabel();
        jSpinner_cera_quantidade = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextField_desconto = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox_outros = new javax.swing.JCheckBox();
        jLabel_descricao = new javax.swing.JLabel();
        jTextField_descricao = new javax.swing.JTextField();
        jLabel_valor_outros = new javax.swing.JLabel();
        jFormattedTextField_valor_outros = new javax.swing.JFormattedTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton_novo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel_totalAtendimentos = new javax.swing.JLabel();
        jLabel_servico_valor = new javax.swing.JLabel();
        jLabel_sifra_servico = new javax.swing.JLabel();
        jMenuBar_menuBar = new javax.swing.JMenuBar();
        jMenu_cadastro = new javax.swing.JMenu();
        jMenuItem_clientes = new javax.swing.JMenuItem();
        jMenuItem_funcionarios = new javax.swing.JMenuItem();
        jMenuItem_servicos = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu_relatorio = new javax.swing.JMenu();
        jMenuItem_relatorioPorDia = new javax.swing.JMenuItem();
        jMenuItem_porPeriodo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem_confEmail = new javax.swing.JMenuItem();
        jMenu_sair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu");
        setBounds(new java.awt.Rectangle(0, 23, 1380, 800));
        setLocationByPlatform(true);
        setSize(new java.awt.Dimension(1380, 800));

        jComboBox_barbeiro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Nenhum--" }));

        jLabel1.setText("Barbeiro:");

        jLabel2.setText("Serviço:");

        jComboBox_servico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Nenhum--" }));
        jComboBox_servico.setToolTipText("");
        jComboBox_servico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_servicoActionPerformed(evt);
            }
        });

        jCheckBox_bebidas.setText("Bebidas");
        jCheckBox_bebidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_bebidasActionPerformed(evt);
            }
        });

        jSpinner_chope_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_chope_quantidade.setToolTipText("");
        jSpinner_chope_quantidade.setEnabled(false);

        jSpinner_cerveja_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_cerveja_quantidade.setToolTipText("");
        jSpinner_cerveja_quantidade.setEnabled(false);

        jSpinner_refri_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_refri_quantidade.setToolTipText("");
        jSpinner_refri_quantidade.setEnabled(false);

        jSpinner_agua_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_agua_quantidade.setToolTipText("");
        jSpinner_agua_quantidade.setEnabled(false);

        jCheckBox_produtos.setText("Produtos");
        jCheckBox_produtos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_produtosActionPerformed(evt);
            }
        });

        jSpinner_pomada_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_pomada_quantidade.setToolTipText("");
        jSpinner_pomada_quantidade.setEnabled(false);

        jSpinner_gel_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_gel_quantidade.setToolTipText("");
        jSpinner_gel_quantidade.setEnabled(false);

        jSpinner_oleo_quantidade.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinner_oleo_quantidade.setToolTipText("");
        jSpinner_oleo_quantidade.setEnabled(false);

        jLabel_chope.setText("Chope");
        jLabel_chope.setEnabled(false);

        jLabel_cerveja.setText("Cerveja");
        jLabel_cerveja.setEnabled(false);

        jLabel_refri.setText("Refri");
        jLabel_refri.setEnabled(false);

        jLabel_agua.setText("Agua");
        jLabel_agua.setEnabled(false);

        jLabel_pomada.setText("Pomada");
        jLabel_pomada.setEnabled(false);

        jLabel_gel.setText("Gél");
        jLabel_gel.setEnabled(false);

        jLabel_oleo.setText("Oleo");
        jLabel_oleo.setEnabled(false);

        jLabel10.setText("Pagamento");

        buttonGroup_formaPagamento.add(jRadioButton_dinheiro);
        jRadioButton_dinheiro.setText("Dinheiro");

        buttonGroup_formaPagamento.add(jRadioButton_cartao);
        jRadioButton_cartao.setText("Cartão");

        jButton_salvar.setText("Salvar");
        jButton_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_salvarActionPerformed(evt);
            }
        });

        jTable_registroVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_registroVenda.setRowHeight(21);
        jTable_registroVenda.setRowMargin(2);
        jTable_registroVenda.setShowGrid(true);
        jTable_registroVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_registroVendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_registroVenda);

        jLabel_agora.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel_agora.setText("data");

        jButton_editar.setText("Editar");
        jButton_editar.setEnabled(false);
        jButton_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_editarActionPerformed(evt);
            }
        });

        jTextField_idVenda.setEnabled(false);

        jButton_excluir.setText("Excluir");
        jButton_excluir.setEnabled(false);
        jButton_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_excluirActionPerformed(evt);
            }
        });

        jLabel_cera.setText("Cera");
        jLabel_cera.setEnabled(false);

        jSpinner_cera_quantidade.setEnabled(false);

        jLabel3.setText("Desconto:");

        jFormattedTextField_desconto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        jLabel4.setText("EX: 1,00");
        jLabel4.setEnabled(false);

        jLabel5.setText("R$");
        jLabel5.setEnabled(false);

        jCheckBox_outros.setText("Outros");
        jCheckBox_outros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_outrosActionPerformed(evt);
            }
        });

        jLabel_descricao.setText("Descriçao");
        jLabel_descricao.setEnabled(false);

        jTextField_descricao.setEnabled(false);

        jLabel_valor_outros.setText("Valor");
        jLabel_valor_outros.setEnabled(false);

        jFormattedTextField_valor_outros.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextField_valor_outros.setEnabled(false);

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel8.setText("EX: 1,00");
        jLabel8.setEnabled(false);

        jLabel9.setText("R$");
        jLabel9.setEnabled(false);

        jButton_novo.setText("Novo");
        jButton_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_novoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setText("Total de atendimentos:");

        jLabel_totalAtendimentos.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel_totalAtendimentos.setText("total");

        jLabel_sifra_servico.setText("R$");
        jLabel_sifra_servico.setEnabled(false);

        jMenu_cadastro.setText("Cadastro");

        jMenuItem_clientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber.png"))); // NOI18N
        jMenuItem_clientes.setText("Clientes");
        jMenuItem_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clientesActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_clientes);

        jMenuItem_funcionarios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barber_funcionario.png"))); // NOI18N
        jMenuItem_funcionarios.setText("Funcionários");
        jMenuItem_funcionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_funcionariosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_funcionarios);

        jMenuItem_servicos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia470/br/com/images/barberiro.png"))); // NOI18N
        jMenuItem_servicos.setText("Serviços/Produtos");
        jMenuItem_servicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_servicosActionPerformed(evt);
            }
        });
        jMenu_cadastro.add(jMenuItem_servicos);

        jMenuBar_menuBar.add(jMenu_cadastro);

        jMenu2.setText("Vendas");
        jMenuBar_menuBar.add(jMenu2);

        jMenu_relatorio.setText("Relatorio");

        jMenuItem_relatorioPorDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/progress-report.png"))); // NOI18N
        jMenuItem_relatorioPorDia.setText("Por dia");
        jMenuItem_relatorioPorDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_relatorioPorDiaActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_relatorioPorDia);

        jMenuItem_porPeriodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/computer-monitor-with-bar-graph.png"))); // NOI18N
        jMenuItem_porPeriodo.setText("Por periodo");
        jMenuItem_porPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_porPeriodoActionPerformed(evt);
            }
        });
        jMenu_relatorio.add(jMenuItem_porPeriodo);

        jMenuBar_menuBar.add(jMenu_relatorio);

        jMenu1.setText("Configuração");

        jMenuItem_confEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/message.png"))); // NOI18N
        jMenuItem_confEmail.setText("Email");
        jMenuItem_confEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_confEmailActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem_confEmail);

        jMenuBar_menuBar.add(jMenu1);

        jMenu_sair.setText("Sair");
        jMenu_sair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu_sairMouseClicked(evt);
            }
        });
        jMenuBar_menuBar.add(jMenu_sair);

        setJMenuBar(jMenuBar_menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jLabel_agora, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel_descricao))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel_cerveja)
                        .addGap(14, 14, 14)
                        .addComponent(jSpinner_cerveja_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(269, 269, 269)
                        .addComponent(jFormattedTextField_valor_outros, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel_cera))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jCheckBox_bebidas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jSpinner_refri_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jSpinner_chope_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel_totalAtendimentos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jSpinner_pomada_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(jTextField_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jSpinner_oleo_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel_agua))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jTextField_idVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel_oleo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jFormattedTextField_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jButton_novo))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jRadioButton_cartao))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(340, 340, 340)
                        .addComponent(jLabel_valor_outros))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel_pomada))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_chope))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel_refri))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jCheckBox_produtos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel_gel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addComponent(jButton_excluir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButton_salvar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jSpinner_agua_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jCheckBox_outros))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jSpinner_gel_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jSpinner_cera_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jRadioButton_dinheiro))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jButton_editar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_barbeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox_servico, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_servico_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel_sifra_servico)))
                .addGap(90, 90, 90))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_agora)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jComboBox_barbeiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)
                                        .addComponent(jComboBox_servico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel_servico_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_sifra_servico, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel3)
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel8)
                                        .addGap(61, 61, 61)
                                        .addComponent(jLabel_descricao)
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel_cerveja))
                                            .addComponent(jSpinner_cerveja_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jFormattedTextField_valor_outros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(62, 62, 62)
                                        .addComponent(jLabel_cera)
                                        .addGap(254, 254, 254)
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(73, 73, 73)
                                        .addComponent(jCheckBox_bebidas))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(284, 284, 284)
                                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(183, 183, 183)
                                        .addComponent(jSpinner_refri_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(jSpinner_chope_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(473, 473, 473)
                                        .addComponent(jLabel_totalAtendimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(jSpinner_pomada_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(106, 106, 106)
                                        .addComponent(jTextField_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(183, 183, 183)
                                        .addComponent(jSpinner_oleo_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(233, 233, 233)
                                        .addComponent(jLabel_agua))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(153, 153, 153)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(343, 343, 343)
                                        .addComponent(jTextField_idVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(173, 173, 173)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(193, 193, 193)
                                        .addComponent(jLabel_oleo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel9))
                                    .addComponent(jFormattedTextField_desconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(413, 413, 413)
                                        .addComponent(jButton_novo))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(376, 376, 376)
                                        .addComponent(jRadioButton_cartao))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(153, 153, 153)
                                        .addComponent(jLabel_valor_outros))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(jLabel_pomada))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(jLabel_chope))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(193, 193, 193)
                                        .addComponent(jLabel_refri))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(73, 73, 73)
                                        .addComponent(jCheckBox_produtos))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(153, 153, 153)
                                        .addComponent(jLabel_gel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(414, 414, 414)
                                        .addComponent(jButton_excluir))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(473, 473, 473)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(414, 414, 414)
                                        .addComponent(jButton_salvar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(223, 223, 223)
                                        .addComponent(jSpinner_agua_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(73, 73, 73)
                                        .addComponent(jCheckBox_outros))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(143, 143, 143)
                                        .addComponent(jSpinner_gel_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(223, 223, 223)
                                        .addComponent(jSpinner_cera_quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(312, 312, 312)
                                        .addComponent(jLabel10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(346, 346, 346)
                                        .addComponent(jRadioButton_dinheiro))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(414, 414, 414)
                                        .addComponent(jButton_editar))))
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clientesActionPerformed

        CadastroCliente cadastroCliente = new CadastroCliente();
        cadastroCliente.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_clientesActionPerformed

    private void jMenuItem_funcionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_funcionariosActionPerformed

        CadastroFuncionario cadastroFuncionario = new CadastroFuncionario();
        cadastroFuncionario.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_funcionariosActionPerformed

    private void jMenuItem_servicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_servicosActionPerformed

        CadastroServicoProdutos cadastroServico = new CadastroServicoProdutos();
        cadastroServico.setVisible(true);
        dispose();

    }//GEN-LAST:event_jMenuItem_servicosActionPerformed

    private void jCheckBox_produtosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_produtosActionPerformed

        if (jCheckBox_produtos.isSelected()) {
            //Label Produtos
            jLabel_gel.setEnabled(true);
            jLabel_oleo.setEnabled(true);
            jLabel_pomada.setEnabled(true);
            jLabel_cera.setEnabled(true);

            //Quantidades
            habilitaContadorProdutos();

        } else {
            //Label Produtos
            jLabel_gel.setEnabled(false);
            jLabel_oleo.setEnabled(false);
            jLabel_pomada.setEnabled(false);
            jLabel_cera.setEnabled(false);

            //Quantidades
            produtosSomenteLeitura();
            jSpinner_gel_quantidade.setValue(0);
            jSpinner_oleo_quantidade.setValue(0);
            jSpinner_pomada_quantidade.setValue(0);
            jSpinner_cera_quantidade.setValue(0);
        }

    }//GEN-LAST:event_jCheckBox_produtosActionPerformed

    private void jCheckBox_bebidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_bebidasActionPerformed

        if (jCheckBox_bebidas.isSelected()) {
            //Label Bebidas
            jLabel_chope.setEnabled(true);
            jLabel_cerveja.setEnabled(true);
            jLabel_agua.setEnabled(true);
            jLabel_refri.setEnabled(true);

            //Quantidades
            jSpinner_chope_quantidade.setEnabled(true);
            jSpinner_cerveja_quantidade.setEnabled(true);
            jSpinner_agua_quantidade.setEnabled(true);
            jSpinner_refri_quantidade.setEnabled(true);

        } else {
            //Label Bebidas
            jLabel_chope.setEnabled(false);
            jLabel_cerveja.setEnabled(false);
            jLabel_agua.setEnabled(false);
            jLabel_refri.setEnabled(false);

            //Quantidades
            bebidasSomenteLeitura();
            jSpinner_chope_quantidade.setValue(0);
            jSpinner_cerveja_quantidade.setValue(0);
            jSpinner_agua_quantidade.setValue(0);
            jSpinner_refri_quantidade.setValue(0);

        }


    }//GEN-LAST:event_jCheckBox_bebidasActionPerformed

    private void jTable_registroVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_registroVendaMouseClicked

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        jButton_editar.setEnabled(true);
        jButton_salvar.setEnabled(false);
        jButton_excluir.setEnabled(true);

        String idVenda = "" + jTable_registroVenda.getValueAt(jTable_registroVenda.getSelectedRow(), 0);//0 == coluna da tabela
        String sql = "select *from Vendas where idVenda = '" + idVenda + "' ";

        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                jTextField_idVenda.setText(String.valueOf(rs.getInt("idVenda")));
                jComboBox_barbeiro.setSelectedItem(String.valueOf(rs.getString("nomeFuncionario")));
                jComboBox_servico.setSelectedItem(String.valueOf(rs.getString("nomeServico")));
                String pagamento = rs.getString("pagamento");

                //DESCONTO
                if (rs.getBigDecimal("desconto").intValue() != 0) {
                    CurrencyUnit real = CurrencyUnit.of("BRL");
                    Money total = Money.of(real, rs.getBigDecimal("desconto"));
                    jFormattedTextField_desconto.setText(total.getAmount().toString().replace(".", ","));
                } else {
                    jFormattedTextField_desconto.setText(null);
                }

                //OUTROS
                if (rs.getBoolean("outros")) {
                    habilitaCampoOutros();
                    jCheckBox_outros.setSelected(true);
                    jTextField_descricao.setText(rs.getString("descricaoOutros"));
                    CurrencyUnit real = CurrencyUnit.of("BRL");
                    Money total = Money.of(real, rs.getBigDecimal("valorOutros"));
                    jFormattedTextField_valor_outros.setText(total.getAmount().toString().replace(".", ","));
                } else {
                    desabilitaCampoOutros();
                    jCheckBox_outros.setSelected(false);
                    jTextField_descricao.setText(null);
                    jFormattedTextField_valor_outros.setText(null);
                }

                //FORMA PAGAMENTO
                if (pagamento.contains("Dinheiro")) {
                    jRadioButton_dinheiro.setSelected(true);
                } else {
                    jRadioButton_cartao.setSelected(true);
                }

                //BEBIDAS
                if (rs.getInt("quantidadeBebidas") > 0) {
                    jCheckBox_bebidas.setSelected(true);
                    habilitaContadorBebidas();
                    jSpinner_agua_quantidade.setValue(rs.getInt("qtd_agua"));
                    jSpinner_cerveja_quantidade.setValue(rs.getInt("qtd_cerveja"));
                    jSpinner_chope_quantidade.setValue(rs.getInt("qtd_chope"));
                    jSpinner_refri_quantidade.setValue(rs.getInt("qtd_refri"));
                } else {
                    jCheckBox_bebidas.setSelected(false);
                    bebidasSomenteLeitura();
                    jSpinner_chope_quantidade.setValue(0);
                    jSpinner_cerveja_quantidade.setValue(0);
                    jSpinner_agua_quantidade.setValue(0);
                    jSpinner_refri_quantidade.setValue(0);
                }

                //PRODUTOS
                if (rs.getInt("quantidadeProdutos") > 0) {
                    jCheckBox_produtos.setSelected(true);
                    habilitaContadorProdutos();
                    jSpinner_gel_quantidade.setValue(rs.getInt("qtd_gel"));
                    jSpinner_oleo_quantidade.setValue(rs.getInt("qtd_oleo"));
                    jSpinner_pomada_quantidade.setValue(rs.getInt("qtd_pomada"));
                    jSpinner_cera_quantidade.setValue(rs.getInt("qtd_cera"));
                } else {
                    jCheckBox_produtos.setSelected(false);
                    produtosSomenteLeitura();
                    jSpinner_gel_quantidade.setValue(0);
                    jSpinner_oleo_quantidade.setValue(0);
                    jSpinner_pomada_quantidade.setValue(0);
                    jSpinner_cera_quantidade.setValue(0);
                }

            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }

        conexao.desconectar();

    }//GEN-LAST:event_jTable_registroVendaMouseClicked

    private void jButton_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_salvarActionPerformed

        VendaDAO vendaDAO = new VendaDAO();
        Venda venda = pegaVenda();

        if (venda != null) {
            if (vendaDAO.salvar(venda)) {
                JOptionPane.showMessageDialog(null, "Valor Total: " + venda.getTotalVenda());

                jLabel_servico_valor.setVisible(false);
                jLabel_sifra_servico.setVisible(false);
                preencheTabela();
                limpaCampos();
                bebidasSomenteLeitura();
                produtosSomenteLeitura();
                outrosSomenteLeitura();

            }
        }


    }//GEN-LAST:event_jButton_salvarActionPerformed

    private void jButton_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editarActionPerformed

        Venda venda = pegaVendaEdicao(Integer.parseInt(jTextField_idVenda.getText()));

        VendaDAO vendaDAO = new VendaDAO();

        if (venda != null) {
            if (vendaDAO.editar(venda)) {
                JOptionPane.showMessageDialog(null, "Venda alterada com sucesso!");
                preencheTabela();
                limpaCampos();
                bebidasSomenteLeitura();
                produtosSomenteLeitura();
                jLabel_servico_valor.setVisible(false);
                jLabel_sifra_servico.setVisible(false);
                jButton_editar.setEnabled(false);
                jButton_salvar.setEnabled(true);
            }
        }


    }//GEN-LAST:event_jButton_editarActionPerformed

    private void jButton_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_excluirActionPerformed

        VendaDAO vendaDAO = new VendaDAO();

        Object[] options = {"Sim", "Não"};

        int confirmacao = JOptionPane.showOptionDialog(null, "Deseja excluir registo permanentemente?", "Atenção", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

        if (confirmacao == 0) {
            if (vendaDAO.excluir(Integer.parseInt(jTextField_idVenda.getText()))) {
                JOptionPane.showMessageDialog(null, "Registro de venda exlcuido com sucesso!");
                preencheTabela();
                limpaCampos();
                bebidasSomenteLeitura();
                produtosSomenteLeitura();
                jLabel_servico_valor.setVisible(false);
                jLabel_sifra_servico.setVisible(false);
                jButton_excluir.setEnabled(false);
                jButton_editar.setEnabled(false);
                jButton_salvar.setEnabled(true);
            }
        }


    }//GEN-LAST:event_jButton_excluirActionPerformed

    private void jMenuItem_relatorioPorDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_relatorioPorDiaActionPerformed

        RelatorioPorDia relatorioPorDia = new RelatorioPorDia();
        relatorioPorDia.setVisible(true);
        dispose();

    }//GEN-LAST:event_jMenuItem_relatorioPorDiaActionPerformed

    private void jMenuItem_porPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_porPeriodoActionPerformed

        RelatorioGeral relatorioGeral = new RelatorioGeral();
        relatorioGeral.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem_porPeriodoActionPerformed

    private void jCheckBox_outrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_outrosActionPerformed

        if (jCheckBox_outros.isSelected()) {

            //labels
            jLabel_descricao.setEnabled(true);
            jLabel_valor_outros.setEnabled(true);

            //campos
            jTextField_descricao.setEnabled(true);
            jFormattedTextField_valor_outros.setEnabled(true);
        } else {
            //labels
            jLabel_descricao.setEnabled(false);
            jLabel_valor_outros.setEnabled(false);

            //campos
            jTextField_descricao.setEnabled(false);
            jFormattedTextField_valor_outros.setEnabled(false);
        }


    }//GEN-LAST:event_jCheckBox_outrosActionPerformed

    private void jButton_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_novoActionPerformed
        jButton_editar.setEnabled(false);
        jButton_excluir.setEnabled(false);
        jButton_salvar.setEnabled(true);
        jLabel_servico_valor.setVisible(false);
        jLabel_sifra_servico.setVisible(false);
        limpaCampos();
        produtosSomenteLeitura();
        bebidasSomenteLeitura();

    }//GEN-LAST:event_jButton_novoActionPerformed

    private void jMenu_sairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu_sairMouseClicked

        //ImageIcon icon = new ImageIcon("src/icon/logo_barbearia_470.png");
        int sair = JOptionPane.showConfirmDialog(null,
                "Deseja Sair?", "Atenção",
                JOptionPane.YES_NO_OPTION, JOptionPane.CLOSED_OPTION);

        if (sair == 0) {
            System.exit(0);
        }


    }//GEN-LAST:event_jMenu_sairMouseClicked

    private void jComboBox_servicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_servicoActionPerformed

        pegaValorServicoSelecionado(jComboBox_servico.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBox_servicoActionPerformed

    private void jMenuItem_confEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_confEmailActionPerformed

        ConfEmail configuracaoEmail = new ConfEmail();
        configuracaoEmail.setVisible(true);

    }//GEN-LAST:event_jMenuItem_confEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_formaPagamento;
    private javax.swing.JButton jButton_editar;
    private javax.swing.JButton jButton_excluir;
    private javax.swing.JButton jButton_novo;
    private javax.swing.JButton jButton_salvar;
    private javax.swing.JCheckBox jCheckBox_bebidas;
    private javax.swing.JCheckBox jCheckBox_outros;
    private javax.swing.JCheckBox jCheckBox_produtos;
    private javax.swing.JComboBox jComboBox_barbeiro;
    private javax.swing.JComboBox jComboBox_servico;
    private javax.swing.JFormattedTextField jFormattedTextField_desconto;
    private javax.swing.JFormattedTextField jFormattedTextField_valor_outros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_agora;
    private javax.swing.JLabel jLabel_agua;
    private javax.swing.JLabel jLabel_cera;
    private javax.swing.JLabel jLabel_cerveja;
    private javax.swing.JLabel jLabel_chope;
    private javax.swing.JLabel jLabel_descricao;
    private javax.swing.JLabel jLabel_gel;
    private javax.swing.JLabel jLabel_oleo;
    private javax.swing.JLabel jLabel_pomada;
    private javax.swing.JLabel jLabel_refri;
    private javax.swing.JLabel jLabel_servico_valor;
    private javax.swing.JLabel jLabel_sifra_servico;
    private javax.swing.JLabel jLabel_totalAtendimentos;
    private javax.swing.JLabel jLabel_valor_outros;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar_menuBar;
    private javax.swing.JMenuItem jMenuItem_clientes;
    private javax.swing.JMenuItem jMenuItem_confEmail;
    private javax.swing.JMenuItem jMenuItem_funcionarios;
    private javax.swing.JMenuItem jMenuItem_porPeriodo;
    private javax.swing.JMenuItem jMenuItem_relatorioPorDia;
    private javax.swing.JMenuItem jMenuItem_servicos;
    private javax.swing.JMenu jMenu_cadastro;
    private javax.swing.JMenu jMenu_relatorio;
    private javax.swing.JMenu jMenu_sair;
    private javax.swing.JRadioButton jRadioButton_cartao;
    private javax.swing.JRadioButton jRadioButton_dinheiro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSpinner jSpinner_agua_quantidade;
    private javax.swing.JSpinner jSpinner_cera_quantidade;
    private javax.swing.JSpinner jSpinner_cerveja_quantidade;
    private javax.swing.JSpinner jSpinner_chope_quantidade;
    private javax.swing.JSpinner jSpinner_gel_quantidade;
    private javax.swing.JSpinner jSpinner_oleo_quantidade;
    private javax.swing.JSpinner jSpinner_pomada_quantidade;
    private javax.swing.JSpinner jSpinner_refri_quantidade;
    private javax.swing.JTable jTable_registroVenda;
    private javax.swing.JTextField jTextField_descricao;
    private javax.swing.JTextField jTextField_idVenda;
    // End of variables declaration//GEN-END:variables

    //Pega funcionarios
    public void pegaFuncionarios() {
        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT *FROM Funcionarios")) {

            while (rs.next()) {

                Funcionario funcionario = new Funcionario();
                funcionario.setNome(rs.getString("nome"));
                funcionario.setTelefone(rs.getString("telefone"));
                funcionario.setCPF(rs.getString("cpf"));
                funcionario.setEmail(rs.getString("email"));
                funcionario.setDataDispensado(rs.getString("dataDispensado"));
                funcionario.setDataContratado(rs.getString("dataContratado"));
                funcionario.setAtivo(rs.getBoolean("ativo"));

                if (funcionario.isAtivo()) {
                    jComboBox_barbeiro.addItem(funcionario.getNome());
                }

            }

            conexao.desconectar();

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    //Lista Servicos
    public void pegaServicos() {

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        BigDecimal total = new BigDecimal(0);

        try (Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT *FROM Servicos")) {

            while (rs.next()) {
                Double valor = rs.getDouble("preco");

                Servico servico = new Servico();
                servico.setNome(rs.getString("servico"));
                servico.setValor(new BigDecimal(valor));

                jComboBox_servico.addItem(servico.getNome());

            }

            conexao.desconectar();

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }

    public String pegaHoraAtual() {

        SimpleDateFormat hora = new SimpleDateFormat("HH:mm");
        return (hora.format(new Date()));

    }

    public String pegaDataAtual() {
        SimpleDateFormat data = new SimpleDateFormat("yyyy-MM-dd");
        return (data.format(new Date()));

    }

    public String pegaDataAtualPainel() {
        SimpleDateFormat data = new SimpleDateFormat("dd-MM-yyyy");
        return (data.format(new Date()));

    }

    public String pegaDataHoraAtual() {
        SimpleDateFormat dataHora = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        return (dataHora.format(new Date()));

    }

    private void preencheTabela() {
        String dataAtual = pegaDataAtual();

        String sql = "SELECT *FROM vendas WHERE data = ?";
        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"ID", "Hora", "Funcionario", "Bebidas", "Produtos", "Outros", "Descrição", "Valor", "Serviço", "Pagamento", "Desconto", "TOTAL"};

        Conexao conexao = new Conexao();
        Connection conn = conexao.conectar();

        try (PreparedStatement pst = conn.prepareStatement(sql)) {

            pst.setString(1, dataAtual);
            ResultSet rs = pst.executeQuery();

            int atentimentos = 0;
            while (rs.next()) {
                atentimentos = rs.getRow();
                boolean ativo = rs.getBoolean("outros");
                String outros = ativo ? "Sim" : "Não";

                CurrencyUnit real = CurrencyUnit.of("BRL");
                Money totalVenda = Money.of(real, rs.getBigDecimal("totalVenda"));
                Money desconto = Money.of(real, rs.getBigDecimal("desconto"));
                Money outrosValor = Money.of(real, rs.getBigDecimal("valorOutros"));

                dados.add(new Object[]{
                    rs.getInt("idVenda"),
                    rs.getString("hora"),
                    rs.getString("nomeFuncionario"),
                    rs.getInt("quantidadeBebidas"),
                    rs.getInt("quantidadeProdutos"),
                    outros,
                    rs.getString("descricaoOutros"),
                    outrosValor,
                    rs.getString("nomeServico"),
                    rs.getString("pagamento"),
                    desconto,
                    totalVenda

                });
            }
            jLabel_totalAtendimentos.setText(String.valueOf(atentimentos));
        } catch (SQLException e) {
            System.out.println(e.getMessage());

        }

        ModeloTabela modelo = new ModeloTabela(dados, colunas);

        jTable_registroVenda.setModel(modelo);
        jTable_registroVenda.setFont(new java.awt.Font("Arial", 0, 16));

        //ID
        jTable_registroVenda.getColumnModel().getColumn(0).setPreferredWidth(65);
        jTable_registroVenda.getColumnModel().getColumn(0).setResizable(false);

        //Hora
        jTable_registroVenda.getColumnModel().getColumn(1).setPreferredWidth(60);
        jTable_registroVenda.getColumnModel().getColumn(1).setResizable(false);

        //Funcionario
        jTable_registroVenda.getColumnModel().getColumn(2).setPreferredWidth(105);
        jTable_registroVenda.getColumnModel().getColumn(2).setResizable(false);

        //Bebidas
        jTable_registroVenda.getColumnModel().getColumn(3).setPreferredWidth(65);
        jTable_registroVenda.getColumnModel().getColumn(3).setResizable(false);

        //Produtos
        jTable_registroVenda.getColumnModel().getColumn(4).setPreferredWidth(65);
        jTable_registroVenda.getColumnModel().getColumn(4).setResizable(false);

        //Outros
        jTable_registroVenda.getColumnModel().getColumn(5).setPreferredWidth(65);
        jTable_registroVenda.getColumnModel().getColumn(5).setResizable(false);

        //DescriçaoOutros
        jTable_registroVenda.getColumnModel().getColumn(6).setPreferredWidth(120);
        jTable_registroVenda.getColumnModel().getColumn(6).setResizable(false);

        //OutrosValor
        jTable_registroVenda.getColumnModel().getColumn(7).setPreferredWidth(120);
        jTable_registroVenda.getColumnModel().getColumn(7).setResizable(false);

        //Servico
        jTable_registroVenda.getColumnModel().getColumn(8).setPreferredWidth(120);
        jTable_registroVenda.getColumnModel().getColumn(8).setResizable(false);

        //Pagamento
        jTable_registroVenda.getColumnModel().getColumn(9).setPreferredWidth(90);
        jTable_registroVenda.getColumnModel().getColumn(9).setResizable(false);

        //Desconto
        jTable_registroVenda.getColumnModel().getColumn(10).setPreferredWidth(110);
        jTable_registroVenda.getColumnModel().getColumn(10).setResizable(false);

        //TOTAL
        jTable_registroVenda.getColumnModel().getColumn(11).setPreferredWidth(100);
        jTable_registroVenda.getColumnModel().getColumn(11).setResizable(false);

        jTable_registroVenda.getTableHeader().setReorderingAllowed(false);
        jTable_registroVenda.setAutoResizeMode(jTable_registroVenda.AUTO_RESIZE_OFF);//AUTO_RESIZE_ALL_COLUMNS

        jTable_registroVenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conexao.desconectar();

    }

    private double pegaValorTotalBebidas() {
        ProdutoDAO produtoDAO = new ProdutoDAO();
        double valorTotalBebidas = 0.0;
        if ((int) jSpinner_agua_quantidade.getValue() > 0) {
            int aguaId = 6;
            double valor = produtoDAO.pegaValorPorId(aguaId);
            valorTotalBebidas += valor * Double.parseDouble(jSpinner_agua_quantidade.getValue().toString());
        }
        if ((int) jSpinner_chope_quantidade.getValue() > 0) {
            int choopeId = 7;
            double valor = produtoDAO.pegaValorPorId(choopeId);
            valorTotalBebidas += valor * Double.parseDouble(jSpinner_chope_quantidade.getValue().toString());
        }
        if ((int) jSpinner_cerveja_quantidade.getValue() > 0) {
            int cervejaId = 4;
            double valor = produtoDAO.pegaValorPorId(cervejaId);
            valorTotalBebidas += valor * Double.parseDouble(jSpinner_cerveja_quantidade.getValue().toString());
        }
        if ((int) jSpinner_refri_quantidade.getValue() > 0) {
            int refriId = 5;
            double valor = produtoDAO.pegaValorPorId(refriId);
            valorTotalBebidas += valor * Double.parseDouble(jSpinner_refri_quantidade.getValue().toString());
        }

        return valorTotalBebidas;

    }

    private int pegaQuantidadeDeBebidas() {
        int quantidade = 0;
        quantidade += (int) jSpinner_agua_quantidade.getValue();
        quantidade += (int) jSpinner_chope_quantidade.getValue();
        quantidade += (int) jSpinner_cerveja_quantidade.getValue();
        quantidade += (int) jSpinner_refri_quantidade.getValue();

        return quantidade;
    }

    private int pegaQuantidadeDeProdutos() {
        int quantidade = 0;
        quantidade += (int) jSpinner_gel_quantidade.getValue();
        quantidade += (int) jSpinner_oleo_quantidade.getValue();
        quantidade += (int) jSpinner_pomada_quantidade.getValue();
        quantidade += (int) jSpinner_cera_quantidade.getValue();

        return quantidade;
    }

    private double pegaValorTotalProdutos() {
        ProdutoDAO produtoDAO = new ProdutoDAO();
        double valorTotalProdutos = 0.0;
        if ((int) jSpinner_gel_quantidade.getValue() > 0) {
            int gelId = 1;
            double valor = produtoDAO.pegaValorPorId(gelId);
            valorTotalProdutos += valor * Double.parseDouble(jSpinner_gel_quantidade.getValue().toString());
        }
        if ((int) jSpinner_oleo_quantidade.getValue() > 0) {
            int oleoId = 2;
            double valor = produtoDAO.pegaValorPorId(oleoId);
            valorTotalProdutos += valor * Double.parseDouble(jSpinner_oleo_quantidade.getValue().toString());
        }
        if ((int) jSpinner_pomada_quantidade.getValue() > 0) {
            int pomadaId = 3;
            double valor = produtoDAO.pegaValorPorId(pomadaId);
            valorTotalProdutos += valor * Double.parseDouble(jSpinner_pomada_quantidade.getValue().toString());
        }
        if ((int) jSpinner_cera_quantidade.getValue() > 0) {
            int ceraId = 8;
            double valor = produtoDAO.pegaValorPorId(ceraId);
            valorTotalProdutos += valor * Double.parseDouble(jSpinner_cera_quantidade.getValue().toString());
        }

        return valorTotalProdutos;

    }

    private boolean camposObrigatorios() {

        if (!jRadioButton_cartao.isSelected() && !jRadioButton_dinheiro.isSelected()
                && jComboBox_barbeiro.getSelectedItem().toString().indexOf("--Nenhum--") > -1
                && jComboBox_servico.getSelectedItem().toString().indexOf("--Nenhum--") > -1) {

            JOptionPane.showMessageDialog(null, "Os campos: "
                    + "Barbeiro, Serviço e Forma de pagamento são obrigatorios");
            return false;

        }

        if (jComboBox_barbeiro.getSelectedItem().toString().indexOf("--Nenhum--") > -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Barbeiro!");
            return false;
        }

        if (jComboBox_servico.getSelectedItem().toString().indexOf("--Nenhum--") > -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Servico!");
            return false;
        }

        if (!jRadioButton_cartao.isSelected() && !jRadioButton_dinheiro.isSelected()) {
            JOptionPane.showMessageDialog(null, "Selecione uma forma de pagamento!");
            return false;
        }

        if (jCheckBox_outros.isSelected()) {
            if (jTextField_descricao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira uma informação na descrição!");
                return false;
            }

            if (jFormattedTextField_valor_outros.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Insira o valor!");
                return false;
            }
        }

        return true;

    }

    private void limpaCampos() {

        jTextField_idVenda.setText(null);
        jComboBox_barbeiro.setSelectedIndex(0);
        jComboBox_servico.setSelectedIndex(0);
        jFormattedTextField_desconto.setText(null);

        //bebidas
        jCheckBox_bebidas.setSelected(false);
        jSpinner_agua_quantidade.setValue(0);
        jSpinner_cerveja_quantidade.setValue(0);
        jSpinner_chope_quantidade.setValue(0);
        jSpinner_refri_quantidade.setValue(0);

        //produtos
        jCheckBox_produtos.setSelected(false);
        jSpinner_gel_quantidade.setValue(0);
        jSpinner_oleo_quantidade.setValue(0);
        jSpinner_pomada_quantidade.setValue(0);
        jSpinner_cera_quantidade.setValue(0);

        //outros
        jCheckBox_outros.setSelected(false);
        jTextField_descricao.setText(null);
        jFormattedTextField_valor_outros.setText(null);

        //pagamento 
        buttonGroup_formaPagamento.clearSelection();

    }

    private void bebidasSomenteLeitura() {
        //bebidas
        jSpinner_agua_quantidade.setEnabled(false);
        jSpinner_cerveja_quantidade.setEnabled(false);
        jSpinner_chope_quantidade.setEnabled(false);
        jSpinner_refri_quantidade.setEnabled(false);

        //Label Bebidas
        jLabel_chope.setEnabled(false);
        jLabel_cerveja.setEnabled(false);
        jLabel_agua.setEnabled(false);
        jLabel_refri.setEnabled(false);

    }

    private void produtosSomenteLeitura() {
        //produtos
        jSpinner_gel_quantidade.setEnabled(false);
        jSpinner_oleo_quantidade.setEnabled(false);
        jSpinner_pomada_quantidade.setEnabled(false);
        jSpinner_cera_quantidade.setEnabled(false);

        //Label Produtos
        jLabel_gel.setEnabled(false);
        jLabel_oleo.setEnabled(false);
        jLabel_pomada.setEnabled(false);
        jLabel_cera.setEnabled(false);
    }

    private void habilitaContadorBebidas() {
        //bebidas
        jSpinner_agua_quantidade.setEnabled(true);
        jSpinner_cerveja_quantidade.setEnabled(true);
        jSpinner_chope_quantidade.setEnabled(true);
        jSpinner_refri_quantidade.setEnabled(true);
    }

    private void habilitaContadorProdutos() {
        //produtos
        jSpinner_gel_quantidade.setEnabled(true);
        jSpinner_oleo_quantidade.setEnabled(true);
        jSpinner_pomada_quantidade.setEnabled(true);
        jSpinner_cera_quantidade.setEnabled(true);
    }

    private Venda pegaVenda() {

        Venda venda = new Venda();
        BigDecimal valorTotalDaVenda = BigDecimal.ZERO;

        FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
        ServicoDAO servicoDAO = new ServicoDAO();

        if (camposObrigatorios()) {
            Funcionario funcionario = funcionarioDAO.pegaFuncionarioPorNome(jComboBox_barbeiro.getSelectedItem().toString());
            Servico servico = servicoDAO.pegaServicoPorNome(jComboBox_servico.getSelectedItem().toString());

            //DESCONTOS
            if (!jFormattedTextField_desconto.getText().isEmpty()) {
                venda.setDesconto(BigDecimal.valueOf(Double.parseDouble(jFormattedTextField_desconto.getText().replace(",", "."))));
                venda.setTotalServico(servico.getValor().subtract(venda.getDesconto()));
            } else {
                venda.setDesconto(BigDecimal.ZERO);
                venda.setTotalServico(servico.getValor().subtract(venda.getDesconto()));
            }

            valorTotalDaVenda = valorTotalDaVenda.add(venda.getTotalServico());
            venda.setIdFuncionario(funcionario.getFuncionarioId());
            venda.setIdServico(servico.getIdServico());
            venda.setNomeServico(servico.getNome());
            venda.setNomeFuncionario(funcionario.getNome());
            venda.setDia(pegaDataAtual());
            venda.setHora(pegaHoraAtual());

            //BEBIDAS
            if (jCheckBox_bebidas.isSelected()) {
                //pega a quantidade de bebidas
                int totalQuantidadeBebidas = pegaQuantidadeDeBebidas();
                venda.setQuantidadeBebidas(totalQuantidadeBebidas);

                //pega quantidade de cada bebida
                venda.setQtd_agua((int) jSpinner_agua_quantidade.getValue());
                venda.setQtd_cerveja((int) jSpinner_cerveja_quantidade.getValue());
                venda.setQtd_chope((int) jSpinner_chope_quantidade.getValue());
                venda.setQtd_refri((int) jSpinner_refri_quantidade.getValue());

                //pega valor gasto em bebidas
                if (totalQuantidadeBebidas > 0) {
                    venda.setTotalBebidas(new BigDecimal(pegaValorTotalBebidas()).setScale(2, RoundingMode.HALF_DOWN));
                    valorTotalDaVenda = valorTotalDaVenda.add(BigDecimal.valueOf(pegaValorTotalBebidas()));

                }

            } else {
                venda.setTotalBebidas(BigDecimal.ZERO);
            }

            //PRODUTOS
            if (jCheckBox_produtos.isSelected()) {
                //pega a quantidade de produtos  
                int totalQuantidadeProdutos = pegaQuantidadeDeProdutos();
                venda.setQuantidadeProdutos(totalQuantidadeProdutos);

                //pega quantidade de cada produto
                venda.setQtd_oleo((int) jSpinner_oleo_quantidade.getValue());
                venda.setQtd_pomada((int) jSpinner_pomada_quantidade.getValue());
                venda.setQtd_gel((int) jSpinner_gel_quantidade.getValue());
                venda.setQtd_cera((int) jSpinner_cera_quantidade.getValue());

                //pega valor gasto em produtos
                if (totalQuantidadeProdutos > 0) {
                    venda.setTotalProduto(new BigDecimal(pegaValorTotalProdutos()).setScale(2, RoundingMode.HALF_DOWN));
                    valorTotalDaVenda = valorTotalDaVenda.add(BigDecimal.valueOf(pegaValorTotalProdutos()));
                }

            } else {
                venda.setTotalProduto(BigDecimal.ZERO);
            }

            //OUTROS
            if (jCheckBox_outros.isSelected()) {
                venda.setOutros(true);
                venda.setDescricaoOutros(jTextField_descricao.getText());
                venda.setValorOutros(BigDecimal.valueOf(Double.parseDouble(jFormattedTextField_valor_outros.getText().replace(",", "."))));
                valorTotalDaVenda = valorTotalDaVenda.add(venda.getValorOutros());
            } else {
                venda.setOutros(false);
                venda.setValorOutros(BigDecimal.ZERO);
            }

            //FORMA DE PAGAMENTO
            if (jRadioButton_dinheiro.isSelected()) {
                venda.setPagamento("Dinheiro");
            } else {
                venda.setPagamento("Cartão");
            }

            //valor final da venda
            venda.setTotalVenda(valorTotalDaVenda.setScale(2, RoundingMode.HALF_DOWN));

        } else {
            return null;
        }

        return venda;
    }

    private Venda pegaVendaEdicao(int idVendaEdicao) {
        VendaDAO vendaDAO = new VendaDAO();
        Venda venda = new Venda();

        venda.setIdVenda(idVendaEdicao);
        BigDecimal valorTotalDaVenda = BigDecimal.ZERO;

        FuncionarioDAO funcionarioDAO = new FuncionarioDAO();
        ServicoDAO servicoDAO = new ServicoDAO();

        if (camposObrigatorios()) {
            Funcionario funcionario = funcionarioDAO.pegaFuncionarioPorNome(jComboBox_barbeiro.getSelectedItem().toString());
            Servico servico = servicoDAO.pegaServicoPorNome(jComboBox_servico.getSelectedItem().toString());

            //DESCONTOS
            if (!jFormattedTextField_desconto.getText().isEmpty()) {
                venda.setDesconto(BigDecimal.valueOf(Double.parseDouble(jFormattedTextField_desconto.getText().replace(",", "."))));
                venda.setTotalServico(servico.getValor().subtract(venda.getDesconto()));
            } else {
                venda.setDesconto(BigDecimal.ZERO);
                venda.setTotalServico(servico.getValor().subtract(venda.getDesconto()));
            }

            valorTotalDaVenda = valorTotalDaVenda.add(venda.getTotalServico());
            venda.setIdFuncionario(funcionario.getFuncionarioId());
            venda.setIdServico(servico.getIdServico());
            venda.setNomeServico(servico.getNome());
            venda.setNomeFuncionario(funcionario.getNome());
            venda.setDia(pegaDataAtual());
            venda.setHora(pegaHoraAtual());

            //BEBIDAS
            if (jCheckBox_bebidas.isSelected()) {
                //pega a quantidade de bebidas
                int totalQuantidadeBebidas = pegaQuantidadeDeBebidas();
                venda.setQuantidadeBebidas(totalQuantidadeBebidas);

                //pega quantidade de cada bebida
                venda.setQtd_agua((int) jSpinner_agua_quantidade.getValue());
                venda.setQtd_cerveja((int) jSpinner_cerveja_quantidade.getValue());
                venda.setQtd_chope((int) jSpinner_chope_quantidade.getValue());
                venda.setQtd_refri((int) jSpinner_refri_quantidade.getValue());

                //pega valor gasto em bebidas
                if (totalQuantidadeBebidas > 0) {
                    venda.setTotalBebidas(new BigDecimal(pegaValorTotalBebidas()).setScale(2, RoundingMode.HALF_DOWN));
                    valorTotalDaVenda = valorTotalDaVenda.add(BigDecimal.valueOf(pegaValorTotalBebidas()));
                }
            } else {
                venda.setTotalBebidas(BigDecimal.ZERO);
            }

            //PRODUTOS
            if (jCheckBox_produtos.isSelected()) {
                //pega a quantidade de produtos  
                int totalQuantidadeProdutos = pegaQuantidadeDeProdutos();
                venda.setQuantidadeProdutos(totalQuantidadeProdutos);

                //pega quantidade de cada produto
                venda.setQtd_oleo((int) jSpinner_oleo_quantidade.getValue());
                venda.setQtd_pomada((int) jSpinner_pomada_quantidade.getValue());
                venda.setQtd_gel((int) jSpinner_gel_quantidade.getValue());
                venda.setQtd_cera((int) jSpinner_cera_quantidade.getValue());

                //pega valor gasto em produtos
                if (totalQuantidadeProdutos > 0) {
                    venda.setTotalProduto(new BigDecimal(pegaValorTotalProdutos()).setScale(2));
                    valorTotalDaVenda = valorTotalDaVenda.add(BigDecimal.valueOf(pegaValorTotalProdutos()));

                }
            } else {
                venda.setTotalProduto(BigDecimal.ZERO);
            }

            //OUTROS
            if (jCheckBox_outros.isSelected()) {
                venda.setOutros(true);
                venda.setDescricaoOutros(jTextField_descricao.getText());
                venda.setValorOutros(BigDecimal.valueOf(Double.parseDouble(jFormattedTextField_valor_outros.getText().replace(",", "."))));
                valorTotalDaVenda = valorTotalDaVenda.add(venda.getValorOutros());
            } else {
                venda.setOutros(false);
                venda.setValorOutros(BigDecimal.ZERO);
            }

            //FORMA DE PAGAMENTO
            if (jRadioButton_dinheiro.isSelected()) {
                venda.setPagamento("Dinheiro");
            } else {
                venda.setPagamento("Cartão");
            }

            venda.setTotalVenda(valorTotalDaVenda.setScale(2, RoundingMode.HALF_DOWN));

        } else {
            return null;
        }

        return venda;

    }

    private void outrosSomenteLeitura() {

        //outros
        jTextField_descricao.setEnabled(false);
        jFormattedTextField_valor_outros.setEnabled(false);
    }

    private void habilitaCampoOutros() {
        //outros
        jTextField_descricao.setEnabled(true);
        jFormattedTextField_valor_outros.setEnabled(true);
    }

    private void desabilitaCampoOutros() {
        //outros
        jTextField_descricao.setEnabled(false);
        jFormattedTextField_valor_outros.setEnabled(false);
    }

    private void pegaValorServicoSelecionado(String selectedItem) {

        if (!selectedItem.contains("--Nenhum--")) {

            Conexao conexao = new Conexao();
            Connection conn = conexao.conectar();

            String sql = "SELECT *FROM Servicos WHERE servico = ?";

            try (PreparedStatement pst = conn.prepareStatement(sql)) {

                pst.setString(1, selectedItem);
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {

                    BigDecimal total = new BigDecimal(0);
                    total = total.add(rs.getBigDecimal("preco").setScale(2, RoundingMode.HALF_DOWN));

                    jLabel_servico_valor.setVisible(true);
                    jLabel_servico_valor.setText(total.toString());
                    jLabel_sifra_servico.setVisible(true);

                }

                conexao.desconectar();

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

        } else {
            jLabel_servico_valor.setVisible(false);
            jLabel_sifra_servico.setVisible(false);
        }

    }

    private boolean diaDeEmailAutomatico() {

        String diaDaSemanaAtual = pegaDiaDaSemanaAtual();
        if(pegaDiaAgendando(diaDaSemanaAtual)) {
            return true;
        }

        return false;
    }

    private String pegaDiaDaSemanaAtual() {

        Date d = new Date();
        Calendar c = new GregorianCalendar();
        c.setTime(d);
        String nome = "";
        int dia = c.get(c.DAY_OF_WEEK);
        switch (dia) {
            case Calendar.SUNDAY:
                nome = "Domingo";
                break;
            case Calendar.MONDAY:
                nome = "Segunda-feira";
                break;
            case Calendar.TUESDAY:
                nome = "Terça-feira";
                break;
            case Calendar.WEDNESDAY:
                nome = "Quarta-feira";
                break;
            case Calendar.THURSDAY:
                nome = "Quinta-feira";
                break;
            case Calendar.FRIDAY:
                nome = "Sexta-feira";
                break;
            case Calendar.SATURDAY:
                nome = "sábado";
                break;

        }
        return nome;

    }

    private boolean pegaDiaAgendando(String diaDaSemanaAtual) {

        ConfEmailDAO confEmailDAO = new ConfEmailDAO();
        ConfiguracaoEmail configuracaoEmail = confEmailDAO.pegaConfiguracao();

        if (configuracaoEmail != null) {
            if (configuracaoEmail.getDiaSemana().equals(diaDaSemanaAtual)) {
                return true;
            }
        }

        return false;

    }

    private boolean possoMandarEmail() {

        ConfEmailDAO confEmailDAO = new ConfEmailDAO();
        ConfiguracaoEmail configuracaoEmail = confEmailDAO.pegaConfiguracao();

        if (configuracaoEmail != null) {
            if (configuracaoEmail.isHabilitaEnvio()) {
                return true;
            }
        }

        return false;
    }
}
